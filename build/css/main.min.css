@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Medium.eot);src:local("Geometria Medium"),local("Geometria-Medium"),url(../fonts/Geometria/Geometria-Medium.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Medium.woff) format("woff"),url(../fonts/Geometria/Geometria-Medium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria.eot);src:local("Geometria"),url(../fonts/Geometria/Geometria.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria.woff) format("woff"),url(../fonts/Geometria/Geometria.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Bold.eot);src:local("Geometria Bold"),local("Geometria-Bold"),url(../fonts/Geometria/Geometria-Bold.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Bold.woff) format("woff"),url(../fonts/Geometria/Geometria-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Light.eot);src:local("Geometria Light"),local("Geometria-Light"),url(../fonts/Geometria/Geometria-Light.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Light.woff) format("woff"),url(../fonts/Geometria/Geometria-Light.ttf) format("truetype");font-weight:300;font-style:normal}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;box-sizing:border-box}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;box-sizing:border-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}b{font-weight:700}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}:root{--dark-blue:#21212d;--rose-quartz:#f6edf4;--raspberry:#bf42c6;--raspberry-40p:rgba(191, 66, 198, 0.4);--white:#fff;--dark--grey:#8f8fa0;--light-grey:#c7c7cf;--purple:#2b1e4c;--gradient-1:linear-gradient(
		135deg,
		#eb40a6 0%,
		#ff6a68 34.43%,
		#f3804e 63.08%,
		#f3a854 100%
	);--gradient-1-70p:linear-gradient(
		93.47deg,
		#f572a4 2.86%,
		#fd8a83 35.9%,
		#f59c72 63.41%,
		#f6ba77 92.08%
	);--gradient-1-30p:linear-gradient(
		93.47deg,
		rgba(245, 114, 164, 0.8) 2.86%,
		#f78eb6 2.87%,
		#fca498 35.9%,
		#f7bb8f 63.41%,
		#f9c993 92.08%
	);--gradient-2:linear-gradient(
		180deg,
		#db4aeb 0%,
		#ae41e9 50.58%,
		#8a39e6 100%
	);--dark-graddient:linear-gradient(180deg, #472c77 0%, #261c45 100%);--font-color:var(--dark-blue);--main-font:normal 14px Geometria;--caption:bold 48px/60px Geometria}html{font-size:15px}@media (min-width:1023px) and (max-width:1230px){html{font-size:14px}}body{font:var(--main-font);color:var(--font-color);overflow-x:hidden;max-width:100vw}.container{display:block;max-width:1110px;margin:auto}@media (min-width:1023px) and (max-width:1230px){.container{padding:0 60px}}@media (max-width:1023px){.container{padding:0 30px}}@media (max-width:647px){.container{padding:0 20px}}.logo{display:flex;align-items:center;color:var(--rose-quartz)}.logo img{margin-right:13px}.logo__label{font-weight:500;font-size:36px;line-height:45px}.menu{color:var(--rose-quartz)}.menu__list{display:flex}.menu__item{margin-right:60px;font-weight:300;font-size:24px;line-height:30px}.menu__item.active{font-weight:700}.menu__item a{text-decoration:none;color:inherit;transition:all .35s ease-in-out}.menu__line{position:absolute;height:4px;transition:all .35s ease-in-out;transform:translateX(-60px);background:linear-gradient(272.48deg,#f3a854 0,#f3804e 43.13%,rgba(255,106,104,.95) 69.53%,#eb40a6 98.8%);border-radius:20px}.header{padding-top:39px}.header .container{display:flex;align-items:center;justify-content:space-between}.welcome{position:relative}.welcome__bg{position:absolute;z-index:-1;width:100%;top:0;left:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2ZvbnRzL0dlb21ldHJpYS9zdHlsZXNoZWV0LmNzcyIsIm1haW4uY3NzIiwiY29tbW9uL19yZXNldC5zY3NzIiwiY29tbW9uL192YXJpYWJsZXMuc2NzcyIsImNvbW1vbi9fYmFzZS5zY3NzIiwiY29tcG9uZW50cy9sb2dvLnNjc3MiLCJjb21wb25lbnRzL21lbnUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5REEsV0FDQyxZQUFhLFVBQ2IsSUFBSyw2Q0FDTCxJQUFLLHlCQUF5QixDQUFFLHlCQUF5QixDQUN4RCxvREFBbUMsMkJBQTJCLENBQzlELDhDQUE2QixjQUFjLENBQzNDLDZDQUE0QixtQkFDN0IsWUFBYSxJQUNiLFdBQVksT0FvQ2IsV0FDQyxZQUFhLFVBQ2IsSUFBSyxzQ0FDTCxJQUFLLGtCQUFrQixDQUN0Qiw2Q0FBNEIsMkJBQTJCLENBQ3ZELHVDQUFzQixjQUFjLENBQ3BDLHNDQUFxQixtQkFDdEIsWUFBYSxJQUNiLFdBQVksT0FHYixXQUNDLFlBQWEsVUFDYixJQUFLLDJDQUNMLElBQUssdUJBQXVCLENBQUUsdUJBQXVCLENBQ3BELGtEQUFpQywyQkFBMkIsQ0FDNUQsNENBQTJCLGNBQWMsQ0FDekMsMkNBQTBCLG1CQUMzQixZQUFhLElBQ2IsV0FBWSxPQW9DYixXQUNDLFlBQWEsVUFDYixJQUFLLDRDQUNMLElBQUssd0JBQXdCLENBQUUsd0JBQXdCLENBQ3RELG1EQUFrQywyQkFBMkIsQ0FDN0QsNkNBQTRCLGNBQWMsQ0FDMUMsNENBQTJCLG1CQUM1QixZQUFhLElBQ2IsV0FBWSxPQzdKYixFQUFHLEtBQU0sUUFBUyxRQ0ZsQixPRFNBLFFBQVMsTUFHRyxNQVBaLEVBSDJCLElBREEsV0NEM0IsS0RTZ0IsT0FEVCxRQUhFLE9BSHVCLEtBQU0sS0FJOUIsR0FIUixJQU13QixRQU5uQixJQ0hMLElETUEsR0FBSSxHQUhNLEdBTXVCLE1BRmpDLFNBR1EsV0FBUixPQUFvQixPQUhWLEtBTlYsR0FBSSxHQUFJLEdBQUksR0FB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QUEsT0FDQSxVQUFBLE1BRUYsV0VyVUMsUUFBQSxNQUNBLFVBQUEsT0FDQSxPQUFBLEtGdVVDLGlER3BYRSxXQUNILFFBQUEsRUFBQSxNRDhFQSwwQkMvRUQsV0FJRSxRQUFBLEVBQUEsTUhzWEEseUJHbFhFLFdBQ0MsUUFBQSxFQUFBLE1IcVhMLE1HalhDLFFBQUEsS0htWEMsWUFBQSxPR2hYRixNQUFBLG1CQUNDLFVBRUEsYUFBQSxLQUNBLGFEMkRBLFlBQUEsSUMvREQsVUFBQSxLSHVYSSxZQUFBLEtBRUosTUFDRSxNQUFBLG1CRTdVRCxZQzdDRCxRQUFBLEtINlhFLFlBQ0UsYUFBQSxLSTlZSixZQUFBLElBQ0MsVUFBQSxLQUNBLFlBQUEsS0FDQSxtQkFIRCxZQUFBLElBTUUsY0FHRCxnQkFBQSxLQUNDLE1BQUEsUUFDQSxXQUFBLElBQUEsS0FBQSxZSjZZQSxZQUNFLFNBQUEsU0t6WkosT0FBQSxJQUNDLFdBQUEsSUFBQSxLQUFBLFlBQ0EsVUFBQSxrQkFDQyxXQUFBLCtGQUdELGNBQUEsS0wwWkQsUUFDRSxZQUFBLEtBQ0EsbUJLNVpBLFFBQUEsS0w4WkUsWUFBQSxPSzlaRixnQkFBQSxjTGlhRixTQUNFLFNBQUEsU0tsWkQsYUFDQyxTQUFBLFNBQ0EsUUFBQSxHQUNBLE1BQUEsS0FDQSxJQUFBLEVBQ0EsS0FBQSIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgc3R5bGVzaGVldCBnZW5lcmF0ZWQgYnkgVHJhbnNmb250ZXIgKGh0dHBzOi8vdHJhbnNmb250ZXIub3JnKSBvbiBKdWx5IDQsIDIwMTcgMjo0OCBBTSAqL1xuXG4vKiBAZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLVRoaW4uZW90Jyk7XG5cdHNyYzogbG9jYWwoJ0dlb21ldHJpYSBUaGluJyksIGxvY2FsKCdHZW9tZXRyaWEtVGhpbicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLVRoaW4uZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1UaGluLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1UaGluLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IDEwMDtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLU1lZGl1bUl0YWxpYy5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIE1lZGl1bUl0YWxpYycpLCBsb2NhbCgnR2VvbWV0cmlhLU1lZGl1bUl0YWxpYycpLFxuXHRcdHVybCgnR2VvbWV0cmlhLU1lZGl1bUl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLU1lZGl1bUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtTWVkaXVtSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IDUwMDtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLUl0YWxpYy5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIEl0YWxpYycpLCBsb2NhbCgnR2VvbWV0cmlhLUl0YWxpYycpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLUhlYXZ5LmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgSGVhdnknKSwgbG9jYWwoJ0dlb21ldHJpYS1IZWF2eScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUhlYXZ5LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtSGVhdnkud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUhlYXZ5LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IDkwMDtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLUV4dHJhQm9sZEl0YWxpYy5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIEV4dHJhQm9sZEl0YWxpYycpLCBsb2NhbCgnR2VvbWV0cmlhLUV4dHJhQm9sZEl0YWxpYycpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUV4dHJhQm9sZEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUV4dHJhQm9sZEl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFCb2xkSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IDgwMDtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuKi9cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogXCJHZW9tZXRyaWFcIjtcblx0c3JjOiB1cmwoXCJHZW9tZXRyaWEtTWVkaXVtLmVvdFwiKTtcblx0c3JjOiBsb2NhbChcIkdlb21ldHJpYSBNZWRpdW1cIiksIGxvY2FsKFwiR2VvbWV0cmlhLU1lZGl1bVwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEtTWVkaXVtLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksXG5cdFx0dXJsKFwiR2VvbWV0cmlhLU1lZGl1bS53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksXG5cdFx0dXJsKFwiR2VvbWV0cmlhLU1lZGl1bS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbi8qXG5AZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLUJvbGRJdGFsaWMuZW90Jyk7XG5cdHNyYzogbG9jYWwoJ0dlb21ldHJpYSBCb2xkSXRhbGljJyksIGxvY2FsKCdHZW9tZXRyaWEtQm9sZEl0YWxpYycpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUJvbGRJdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1Cb2xkSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1Cb2xkSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiAnR2VvbWV0cmlhJztcblx0c3JjOiB1cmwoJ0dlb21ldHJpYS1MaWdodEl0YWxpYy5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIExpZ2h0SXRhbGljJyksIGxvY2FsKCdHZW9tZXRyaWEtTGlnaHRJdGFsaWMnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1MaWdodEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUxpZ2h0SXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1MaWdodEl0YWxpYy50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdGZvbnQtd2VpZ2h0OiAzMDA7XG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiAnR2VvbWV0cmlhJztcblx0c3JjOiB1cmwoJ0dlb21ldHJpYS1IZWF2eUl0YWxpYy5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIEhlYXZ5SXRhbGljJyksIGxvY2FsKCdHZW9tZXRyaWEtSGVhdnlJdGFsaWMnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1IZWF2eUl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUhlYXZ5SXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1IZWF2eUl0YWxpYy50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdGZvbnQtd2VpZ2h0OiA5MDA7XG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcbn0gKi9cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiBcIkdlb21ldHJpYVwiO1xuXHRzcmM6IHVybChcIkdlb21ldHJpYS5lb3RcIik7XG5cdHNyYzogbG9jYWwoXCJHZW9tZXRyaWFcIiksXG5cdFx0dXJsKFwiR2VvbWV0cmlhLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksXG5cdFx0dXJsKFwiR2VvbWV0cmlhLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogXCJHZW9tZXRyaWFcIjtcblx0c3JjOiB1cmwoXCJHZW9tZXRyaWEtQm9sZC5lb3RcIik7XG5cdHNyYzogbG9jYWwoXCJHZW9tZXRyaWEgQm9sZFwiKSwgbG9jYWwoXCJHZW9tZXRyaWEtQm9sZFwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEtQm9sZC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLFxuXHRcdHVybChcIkdlb21ldHJpYS1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEtQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbi8qIEBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtRXh0cmFCb2xkLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgRXh0cmFCb2xkJyksIGxvY2FsKCdHZW9tZXRyaWEtRXh0cmFCb2xkJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFCb2xkLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFCb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1FeHRyYUJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogODAwO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtVGhpbkl0YWxpYy5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIFRoaW5JdGFsaWMnKSwgbG9jYWwoJ0dlb21ldHJpYS1UaGluSXRhbGljJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtVGhpbkl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLVRoaW5JdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLVRoaW5JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogMTAwO1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtRXh0cmFMaWdodEl0YWxpYy5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIEV4dHJhTGlnaHRJdGFsaWMnKSwgbG9jYWwoJ0dlb21ldHJpYS1FeHRyYUxpZ2h0SXRhbGljJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFMaWdodEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUV4dHJhTGlnaHRJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUV4dHJhTGlnaHRJdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogMjAwO1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG59ICovXG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogXCJHZW9tZXRyaWFcIjtcblx0c3JjOiB1cmwoXCJHZW9tZXRyaWEtTGlnaHQuZW90XCIpO1xuXHRzcmM6IGxvY2FsKFwiR2VvbWV0cmlhIExpZ2h0XCIpLCBsb2NhbChcIkdlb21ldHJpYS1MaWdodFwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEtTGlnaHQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEtTGlnaHQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLFxuXHRcdHVybChcIkdlb21ldHJpYS1MaWdodC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG5cdGZvbnQtd2VpZ2h0OiAzMDA7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuLyogQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiAnR2VvbWV0cmlhJztcblx0c3JjOiB1cmwoJ0dlb21ldHJpYS1FeHRyYUxpZ2h0LmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgRXh0cmFMaWdodCcpLCBsb2NhbCgnR2VvbWV0cmlhLUV4dHJhTGlnaHQnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1FeHRyYUxpZ2h0LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFMaWdodC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFMaWdodC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdGZvbnQtd2VpZ2h0OiAyMDA7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn0gKi9cbiIsIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXHJcbiAgIHYyLjAtbW9kaWZpZWQgfCAyMDExMDEyNlxyXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxyXG4qL1xuQGltcG9ydCB1cmwoLi4vZm9udHMvR2VvbWV0cmlhL3N0eWxlc2hlZXQuY3NzKTtcbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuLyogbWFrZSBzdXJlIHRvIHNldCBzb21lIGZvY3VzIHN0eWxlcyBmb3IgYWNjZXNzaWJpbGl0eSAqL1xuOmZvY3VzIHtcbiAgb3V0bGluZTogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG5cbm9sLCB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuYmxvY2txdW90ZSwgcSB7XG4gIHF1b3Rlczogbm9uZTsgfVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGNvbnRlbnQ6IG5vbmU7IH1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24sXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtYnV0dG9uLFxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTsgfVxuXG5pbnB1dFt0eXBlPXNlYXJjaF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG4vKipcclxuICogQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDYvNy84LzkgYW5kIEZpcmVmb3ggMy5cclxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAqZGlzcGxheTogaW5saW5lO1xuICAqem9vbTogMTtcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbi8qKlxyXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxyXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxyXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcclxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDcvOC85LCBGaXJlZm94IDMsIGFuZCBTYWZhcmkgNC5cclxuICogS25vd24gaXNzdWU6IG5vIElFIDYgc3VwcG9ydC5cclxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRSA2Lzcgd2hlbiBib2R5IGBmb250LXNpemVgIGlzIHNldCB1c2luZ1xyXG4gKiAgICBgZW1gIHVuaXRzLlxyXG4gKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcclxuICogICAgdXNlciB6b29tLlxyXG4gKi9cbmh0bWwge1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIEFkZHJlc3MgYG91dGxpbmVgIGluY29uc2lzdGVuY3kgYmV0d2VlbiBDaHJvbWUgYW5kIG90aGVyIGJyb3dzZXJzLlxyXG4gKi9cbmE6Zm9jdXMge1xuICBvdXRsaW5lOiB0aGluIGRvdHRlZDsgfVxuXG4vKipcclxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDsgfVxuXG4vKipcclxuICogMS4gUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA2LzcvOC85IGFuZCBGaXJlZm94IDMuXHJcbiAqIDIuIEltcHJvdmUgaW1hZ2UgcXVhbGl0eSB3aGVuIHNjYWxlZCBpbiBJRSA3LlxyXG4gKi9cbmltZyB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICAtbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBiaWN1YmljO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDYvNy84LzksIFNhZmFyaSA1LCBhbmQgT3BlcmEgMTEuXHJcbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxyXG4gKiBDb3JyZWN0IG1hcmdpbiBkaXNwbGF5ZWQgb2RkbHkgaW4gSUUgNi83LlxyXG4gKi9cbmZvcm0ge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXHJcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cclxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDYvNy84LzkuXHJcbiAqIDIuIENvcnJlY3QgdGV4dCBub3Qgd3JhcHBpbmcgaW4gRmlyZWZveCAzLlxyXG4gKiAzLiBDb3JyZWN0IGFsaWdubWVudCBkaXNwbGF5ZWQgb2RkbHkgaW4gSUUgNi83LlxyXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAyICovXG4gICptYXJnaW4tbGVmdDogLTdweDtcbiAgLyogMyAqLyB9XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGZvbnQgc2l6ZSBub3QgYmVpbmcgaW5oZXJpdGVkIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRSA2LzcsIEZpcmVmb3ggMyssIFNhZmFyaSA1LFxyXG4gKiAgICBhbmQgQ2hyb21lLlxyXG4gKiAzLiBJbXByb3ZlIGFwcGVhcmFuY2UgYW5kIGNvbnNpc3RlbmN5IGluIGFsbCBicm93c2Vycy5cclxuICovXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDMgKi9cbiAgKnZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIC8qIDMgKi8gfVxuXG4vKipcclxuICogQWRkcmVzcyBGaXJlZm94IDMrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxyXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cclxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7IH1cblxuLyoqXHJcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cclxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cclxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBDaHJvbWUsIFNhZmFyaSA1KywgYW5kIElFIDYrLlxyXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3ggNCsgYW5kIE9wZXJhLlxyXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxyXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxyXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cclxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxyXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxyXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXHJcbiAqIDQuIFJlbW92ZSBpbm5lciBzcGFjaW5nIGluIElFIDcgd2l0aG91dCBhZmZlY3Rpbmcgbm9ybWFsIHRleHQgaW5wdXRzLlxyXG4gKiAgICBLbm93biBpc3N1ZTogaW5uZXIgc3BhY2luZyByZW1haW5zIGluIElFIDYuXHJcbiAqL1xuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLyogMyAqL1xuICAqb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDQgKi8gfVxuXG4vKipcclxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cclxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXHJcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gY29udGVudC1ib3ggaW4gSUUgOC85LlxyXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LlxyXG4gKiAzLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgNy5cclxuICogICAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUUgNi5cclxuICovXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbiAgKmhlaWdodDogMTNweDtcbiAgLyogMyAqL1xuICAqd2lkdGg6IDEzcHg7XG4gIC8qIDMgKi8gfVxuXG4vKipcclxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIDUgYW5kIENocm9tZS5cclxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXHJcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxyXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIDUgYW5kIENocm9tZVxyXG4gKiBvbiBPUyBYLlxyXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggMysuXHJcbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXHJcbiAqIDEuIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA2LzcvOC85LlxyXG4gKiAyLiBJbXByb3ZlIHJlYWRhYmlsaXR5IGFuZCBhbGlnbm1lbnQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXHJcbiAqL1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG5odG1sLFxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiAjMjIyOyB9XG5cbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbmltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7IH1cblxuYiB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi5jaHJvbWVmcmFtZSB7XG4gIG1hcmdpbjogMC4yZW0gMDtcbiAgYmFja2dyb3VuZDogI2NjYztcbiAgY29sb3I6ICMwMDA7XG4gIHBhZGRpbmc6IDAuMmVtIDA7IH1cblxuOnJvb3Qge1xuICAtLWRhcmstYmx1ZTogIzIxMjEyZDtcbiAgLS1yb3NlLXF1YXJ0ejogI2Y2ZWRmNDtcbiAgLS1yYXNwYmVycnk6ICNiZjQyYzY7XG4gIC0tcmFzcGJlcnJ5LTQwcDogcmdiYSgxOTEsIDY2LCAxOTgsIDAuNCk7XG4gIC0td2hpdGU6ICNmZmY7XG4gIC0tZGFyay0tZ3JleTogIzhmOGZhMDtcbiAgLS1saWdodC1ncmV5OiAjYzdjN2NmO1xuICAtLXB1cnBsZTogIzJiMWU0YztcbiAgLS1ncmFkaWVudC0xOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHQxMzVkZWcsXHJcblx0XHQjZWI0MGE2IDAlLFxyXG5cdFx0I2ZmNmE2OCAzNC40MyUsXHJcblx0XHQjZjM4MDRlIDYzLjA4JSxcclxuXHRcdCNmM2E4NTQgMTAwJVxyXG5cdCk7XG4gIC0tZ3JhZGllbnQtMS03MHA6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdDkzLjQ3ZGVnLFxyXG5cdFx0I2Y1NzJhNCAyLjg2JSxcclxuXHRcdCNmZDhhODMgMzUuOSUsXHJcblx0XHQjZjU5YzcyIDYzLjQxJSxcclxuXHRcdCNmNmJhNzcgOTIuMDglXHJcblx0KTtcbiAgLS1ncmFkaWVudC0xLTMwcDogbGluZWFyLWdyYWRpZW50KFxyXG5cdFx0OTMuNDdkZWcsXHJcblx0XHRyZ2JhKDI0NSwgMTE0LCAxNjQsIDAuOCkgMi44NiUsXHJcblx0XHQjZjc4ZWI2IDIuODclLFxyXG5cdFx0I2ZjYTQ5OCAzNS45JSxcclxuXHRcdCNmN2JiOGYgNjMuNDElLFxyXG5cdFx0I2Y5Yzk5MyA5Mi4wOCVcclxuXHQpO1xuICAtLWdyYWRpZW50LTI6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdDE4MGRlZyxcclxuXHRcdCNkYjRhZWIgMCUsXHJcblx0XHQjYWU0MWU5IDUwLjU4JSxcclxuXHRcdCM4YTM5ZTYgMTAwJVxyXG5cdCk7XG4gIC0tZGFyay1ncmFkZGllbnQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICM0NzJjNzcgMCUsICMyNjFjNDUgMTAwJSk7XG4gIC0tZm9udC1jb2xvcjogdmFyKC0tZGFyay1ibHVlKTtcbiAgLS1tYWluLWZvbnQ6IG5vcm1hbCAxNHB4IEdlb21ldHJpYTtcbiAgLS1jYXB0aW9uOiBib2xkIDQ4cHgvNjBweCBHZW9tZXRyaWE7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTVweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyM3B4KSBhbmQgKG1heC13aWR0aDogMTIzMHB4KSB7XG4gICAgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuXG5ib2R5IHtcbiAgZm9udDogdmFyKC0tbWFpbi1mb250KTtcbiAgY29sb3I6IHZhcigtLWZvbnQtY29sb3IpO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIG1heC13aWR0aDogMTAwdnc7IH1cblxuLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDExMTBweDtcbiAgbWFyZ2luOiBhdXRvOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDIzcHgpIGFuZCAobWF4LXdpZHRoOiAxMjMwcHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgNjBweDsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgMzBweDsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2NDdweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMCAyMHB4OyB9IH1cblxuLmxvZ28ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogdmFyKC0tcm9zZS1xdWFydHopOyB9XG4gIC5sb2dvIGltZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxM3B4OyB9XG4gIC5sb2dvX19sYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDQ1cHg7IH1cblxuLm1lbnUge1xuICBjb2xvcjogdmFyKC0tcm9zZS1xdWFydHopOyB9XG4gIC5tZW51X19saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5tZW51X19pdGVtIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDYwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7IH1cbiAgICAubWVudV9faXRlbS5hY3RpdmUge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICAubWVudV9faXRlbSBhIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMzVzIGVhc2UtaW4tb3V0OyB9XG4gIC5tZW51X19saW5lIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgaGVpZ2h0OiA0cHg7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMzVzIGVhc2UtaW4tb3V0O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNjBweCk7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDI3Mi40OGRlZywgI2YzYTg1NCAwJSwgI2YzODA0ZSA0My4xMyUsIHJnYmEoMjU1LCAxMDYsIDEwNCwgMC45NSkgNjkuNTMlLCAjZWI0MGE2IDk4LjglKTtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4OyB9XG5cbi5oZWFkZXIge1xuICBwYWRkaW5nLXRvcDogMzlweDsgfVxuICAuaGVhZGVyIC5jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cblxuLndlbGNvbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLndlbGNvbWVfX2JnIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogLTE7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7IH1cbiIsIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXHJcbiAgIHYyLjAtbW9kaWZpZWQgfCAyMDExMDEyNlxyXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxyXG4qL1xyXG5cclxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXHJcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcclxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxyXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxyXG5iLCB1LCBpLCBjZW50ZXIsXHJcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXHJcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxyXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcclxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsXHJcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcclxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXHJcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XHJcbiAgbWFyZ2luOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0Ym9yZGVyOiAwO1xyXG5cdGZvbnQtc2l6ZTogMTAwJTtcclxuXHRmb250OiBpbmhlcml0O1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLyogbWFrZSBzdXJlIHRvIHNldCBzb21lIGZvY3VzIHN0eWxlcyBmb3IgYWNjZXNzaWJpbGl0eSAqL1xyXG46Zm9jdXMge1xyXG4gICAgb3V0bGluZTogMDtcclxufVxyXG5cclxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xyXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxyXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5ib2R5IHtcclxuXHRsaW5lLWhlaWdodDogMTtcclxufVxyXG5cclxub2wsIHVsIHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5ibG9ja3F1b3RlLCBxIHtcclxuXHRxdW90ZXM6IG5vbmU7XHJcbn1cclxuXHJcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSwgcTphZnRlciB7XHJcblx0Y29udGVudDogJyc7XHJcblx0Y29udGVudDogbm9uZTtcclxufVxyXG5cclxudGFibGUge1xyXG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblx0Ym9yZGVyLXNwYWNpbmc6IDA7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxyXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtYnV0dG9uLFxyXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvbiB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9c2VhcmNoXSB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICByZXNpemU6IHZlcnRpY2FsO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDYvNy84LzkgYW5kIEZpcmVmb3ggMy5cclxuICovXHJcblxyXG5hdWRpbyxcclxuY2FudmFzLFxyXG52aWRlbyB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAqZGlzcGxheTogaW5saW5lO1xyXG4gICAgKnpvb206IDE7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxyXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxyXG4gKi9cclxuXHJcbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgaGVpZ2h0OiAwO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDcvOC85LCBGaXJlZm94IDMsIGFuZCBTYWZhcmkgNC5cclxuICogS25vd24gaXNzdWU6IG5vIElFIDYgc3VwcG9ydC5cclxuICovXHJcblxyXG5baGlkZGVuXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0ZXh0IHJlc2l6aW5nIG9kZGx5IGluIElFIDYvNyB3aGVuIGJvZHkgYGZvbnQtc2l6ZWAgaXMgc2V0IHVzaW5nXHJcbiAqICAgIGBlbWAgdW5pdHMuXHJcbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xyXG4gKiAgICB1c2VyIHpvb20uXHJcbiAqL1xyXG5cclxuaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cclxuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG4gICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgYG91dGxpbmVgIGluY29uc2lzdGVuY3kgYmV0d2VlbiBDaHJvbWUgYW5kIG90aGVyIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmE6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogdGhpbiBkb3R0ZWQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5hOmFjdGl2ZSxcclxuYTpob3ZlciB7XHJcbiAgICBvdXRsaW5lOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA2LzcvOC85IGFuZCBGaXJlZm94IDMuXHJcbiAqIDIuIEltcHJvdmUgaW1hZ2UgcXVhbGl0eSB3aGVuIHNjYWxlZCBpbiBJRSA3LlxyXG4gKi9cclxuXHJcbmltZyB7XHJcbiAgICBib3JkZXI6IDA7IC8qIDEgKi9cclxuICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDYvNy84LzksIFNhZmFyaSA1LCBhbmQgT3BlcmEgMTEuXHJcbiAqL1xyXG5cclxuZmlndXJlIHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgbWFyZ2luIGRpc3BsYXllZCBvZGRseSBpbiBJRSA2LzcuXHJcbiAqL1xyXG5cclxuZm9ybSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXHJcbiAqL1xyXG5cclxuZmllbGRzZXQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcclxuICAgIG1hcmdpbjogMCAycHg7XHJcbiAgICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgNi83LzgvOS5cclxuICogMi4gQ29ycmVjdCB0ZXh0IG5vdCB3cmFwcGluZyBpbiBGaXJlZm94IDMuXHJcbiAqIDMuIENvcnJlY3QgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRSA2LzcuXHJcbiAqL1xyXG5cclxubGVnZW5kIHtcclxuICAgIGJvcmRlcjogMDsgLyogMSAqL1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDIgKi9cclxuICAgICptYXJnaW4tbGVmdDogLTdweDsgLyogMyAqL1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCBmb250IHNpemUgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUUgNi83LCBGaXJlZm94IDMrLCBTYWZhcmkgNSxcclxuICogICAgYW5kIENocm9tZS5cclxuICogMy4gSW1wcm92ZSBhcHBlYXJhbmNlIGFuZCBjb25zaXN0ZW5jeSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cclxuICAgIG1hcmdpbjogMDsgLyogMiAqL1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAzICovXHJcbiAgICAqdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLyogMyAqL1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBGaXJlZm94IDMrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxyXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0IHtcclxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXHJcbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXHJcbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gQ2hyb21lLCBTYWZhcmkgNSssIGFuZCBJRSA2Ky5cclxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94IDQrIGFuZCBPcGVyYS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbnNlbGVjdCB7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXHJcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxyXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXHJcbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXHJcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cclxuICogNC4gUmVtb3ZlIGlubmVyIHNwYWNpbmcgaW4gSUUgNyB3aXRob3V0IGFmZmVjdGluZyBub3JtYWwgdGV4dCBpbnB1dHMuXHJcbiAqICAgIEtub3duIGlzc3VlOiBpbm5lciBzcGFjaW5nIHJlbWFpbnMgaW4gSUUgNi5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xyXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXHJcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cclxuICAgIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xyXG4gICAgKm92ZXJmbG93OiB2aXNpYmxlOyAgLyogNCAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cclxuICovXHJcblxyXG5idXR0b25bZGlzYWJsZWRdLFxyXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGNvbnRlbnQtYm94IGluIElFIDgvOS5cclxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS5cclxuICogMy4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDcuXHJcbiAqICAgIEtub3duIGlzc3VlOiBleGNlc3MgcGFkZGluZyByZW1haW5zIGluIElFIDYuXHJcbiAqL1xyXG5cclxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxyXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gICAgcGFkZGluZzogMDsgLyogMiAqL1xyXG4gICAgKmhlaWdodDogMTNweDsgLyogMyAqL1xyXG4gICAgKndpZHRoOiAxM3B4OyAvKiAzICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lLlxyXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSA1IGFuZCBDaHJvbWVcclxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXHJcbiAqL1xyXG5cclxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xyXG4gICAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSA1IGFuZCBDaHJvbWVcclxuICogb24gT1MgWC5cclxuICovXHJcblxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCAzKy5cclxuICovXHJcblxyXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXHJcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgNi83LzgvOS5cclxuICogMi4gSW1wcm92ZSByZWFkYWJpbGl0eSBhbmQgYWxpZ25tZW50IGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICBvdmVyZmxvdzogYXV0bzsgLyogMSAqL1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxyXG4gKi9cclxuXHJcbnRhYmxlIHtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBib3JkZXItc3BhY2luZzogMDtcclxufVxyXG5cclxuaHRtbCxcclxuYnV0dG9uLFxyXG5pbnB1dCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgICBjb2xvcjogIzIyMjtcclxufVxyXG5cclxuXHJcbjo6LW1vei1zZWxlY3Rpb24ge1xyXG4gICAgYmFja2dyb3VuZDogI2IzZDRmYztcclxuICAgIHRleHQtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG46OnNlbGVjdGlvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xyXG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG5maWVsZHNldCB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICByZXNpemU6IHZlcnRpY2FsO1xyXG59XHJcblxyXG5ie1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5jaHJvbWVmcmFtZSB7XHJcbiAgICBtYXJnaW46IDAuMmVtIDA7XHJcbiAgICBiYWNrZ3JvdW5kOiAjY2NjO1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgICBwYWRkaW5nOiAwLjJlbSAwO1xyXG59IiwiOnJvb3Qge1xyXG5cdC8vIENvbG9yc1xyXG5cdC0tZGFyay1ibHVlOiAjMjEyMTJkO1xyXG5cdC0tcm9zZS1xdWFydHo6ICNmNmVkZjQ7XHJcblx0LS1yYXNwYmVycnk6ICNiZjQyYzY7XHJcblx0LS1yYXNwYmVycnktNDBwOiByZ2JhKDE5MSwgNjYsIDE5OCwgMC40KTtcclxuXHQtLXdoaXRlOiAjZmZmO1xyXG5cdC0tZGFyay0tZ3JleTogIzhmOGZhMDtcclxuXHQtLWxpZ2h0LWdyZXk6ICNjN2M3Y2Y7XHJcblx0LS1wdXJwbGU6ICMyYjFlNGM7XHJcblxyXG5cdC8vIEdyYWRpZW50c1xyXG5cdC0tZ3JhZGllbnQtMTogbGluZWFyLWdyYWRpZW50KFxyXG5cdFx0MTM1ZGVnLFxyXG5cdFx0I2ViNDBhNiAwJSxcclxuXHRcdCNmZjZhNjggMzQuNDMlLFxyXG5cdFx0I2YzODA0ZSA2My4wOCUsXHJcblx0XHQjZjNhODU0IDEwMCVcclxuXHQpO1xyXG5cdC0tZ3JhZGllbnQtMS03MHA6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdDkzLjQ3ZGVnLFxyXG5cdFx0I2Y1NzJhNCAyLjg2JSxcclxuXHRcdCNmZDhhODMgMzUuOSUsXHJcblx0XHQjZjU5YzcyIDYzLjQxJSxcclxuXHRcdCNmNmJhNzcgOTIuMDglXHJcblx0KTtcclxuXHQtLWdyYWRpZW50LTEtMzBwOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHQ5My40N2RlZyxcclxuXHRcdHJnYmEoMjQ1LCAxMTQsIDE2NCwgMC44KSAyLjg2JSxcclxuXHRcdCNmNzhlYjYgMi44NyUsXHJcblx0XHQjZmNhNDk4IDM1LjklLFxyXG5cdFx0I2Y3YmI4ZiA2My40MSUsXHJcblx0XHQjZjljOTkzIDkyLjA4JVxyXG5cdCk7XHJcblx0LS1ncmFkaWVudC0yOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHQxODBkZWcsXHJcblx0XHQjZGI0YWViIDAlLFxyXG5cdFx0I2FlNDFlOSA1MC41OCUsXHJcblx0XHQjOGEzOWU2IDEwMCVcclxuXHQpO1xyXG5cdC0tZGFyay1ncmFkZGllbnQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICM0NzJjNzcgMCUsICMyNjFjNDUgMTAwJSk7XHJcblxyXG5cdC8vIEZvbnRcclxuXHQtLWZvbnQtY29sb3I6IHZhcigtLWRhcmstYmx1ZSk7XHJcblx0LS1tYWluLWZvbnQ6IG5vcm1hbCAxNHB4IEdlb21ldHJpYTtcclxuXHQtLWNhcHRpb246IGJvbGQgNDhweC82MHB4IEdlb21ldHJpYTtcclxufVxyXG5cclxuLy8tLS0tLS0tLURFVklDRSBTSVpFLS0tLS0tLS1cclxuJHNtYWxsLW1vYmlsZTogNDAwcHg7XHJcbiR0YWJsZXQtd2lkdGg6IDY0OHB4O1xyXG4kZGVza3RvcC13aWR0aDogMTAyM3B4O1xyXG4kY29udGFpbmVyLXdpZHRoOiAxMjMwcHg7XHJcblxyXG5AbWl4aW4gc21hbGwtbW9iaWxlIHtcclxuXHRAbWVkaWEgKG1heC13aWR0aDogJHNtYWxsLW1vYmlsZSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gbW9iaWxlIHtcclxuXHRAbWVkaWEgKG1heC13aWR0aDogI3skdGFibGV0LXdpZHRoIC0gMXB4fSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gdGFibGV0IHtcclxuXHRAbWVkaWEgKG1heC13aWR0aDogI3skZGVza3RvcC13aWR0aH0pIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIGRlc2t0b3Age1xyXG5cdEBtZWRpYSAobWluLXdpZHRoOiAjeyRkZXNrdG9wLXdpZHRoICsgMXB4fSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gY29udGFpbmVyIHtcclxuXHRAbWVkaWEgKG1pbi13aWR0aDogI3skZGVza3RvcC13aWR0aH0pIGFuZCAobWF4LXdpZHRoOiAjeyRjb250YWluZXItd2lkdGh9KSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuIiwiaHRtbCB7XHJcblx0Zm9udC1zaXplOiAxNXB4O1xyXG5cclxuXHRAaW5jbHVkZSBjb250YWluZXIge1xyXG5cdFx0Zm9udC1zaXplOiAxNHB4O1xyXG5cdH1cclxufVxyXG5cclxuYm9keSB7XHJcblx0Zm9udDogdmFyKC0tbWFpbi1mb250KTtcclxuXHRjb2xvcjogdmFyKC0tZm9udC1jb2xvcik7XHJcblx0b3ZlcmZsb3cteDogaGlkZGVuO1xyXG5cclxuXHRtYXgtd2lkdGg6IDEwMHZ3O1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHJcblx0bWF4LXdpZHRoOiAxMTEwcHg7XHJcblx0bWFyZ2luOiBhdXRvO1xyXG5cclxuXHRAaW5jbHVkZSBjb250YWluZXIge1xyXG5cdFx0cGFkZGluZzogMCA2MHB4O1xyXG5cdH1cclxuXHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHBhZGRpbmc6IDAgMzBweDtcclxuXHR9XHJcblxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHRwYWRkaW5nOiAwIDIwcHg7XHJcblx0fVxyXG59XHJcbiIsIi5sb2dvIHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0Y29sb3I6IHZhcigtLXJvc2UtcXVhcnR6KTtcclxuXHJcblx0aW1nIHtcclxuXHRcdG1hcmdpbi1yaWdodDogMTNweDtcclxuXHR9XHJcblxyXG5cdCZfX2xhYmVsIHtcclxuXHRcdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0XHRmb250LXNpemU6IDM2cHg7XHJcblx0XHRsaW5lLWhlaWdodDogNDVweDtcclxuXHR9XHJcbn1cclxuIiwiLm1lbnUge1xyXG5cdGNvbG9yOiB2YXIoLS1yb3NlLXF1YXJ0eik7XHJcblx0Jl9fbGlzdCB7XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdH1cclxuXHJcblx0Jl9faXRlbSB7XHJcblx0XHRtYXJnaW4tcmlnaHQ6IDYwcHg7XHJcblx0XHRmb250LXdlaWdodDogMzAwO1xyXG5cdFx0Zm9udC1zaXplOiAyNHB4O1xyXG5cdFx0bGluZS1oZWlnaHQ6IDMwcHg7XHJcblxyXG5cdFx0Ji5hY3RpdmUge1xyXG5cdFx0XHRmb250LXdlaWdodDogYm9sZDtcclxuXHRcdH1cclxuXHRcdGEge1xyXG5cdFx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0XHRcdGNvbG9yOiBpbmhlcml0O1xyXG5cdFx0XHR0cmFuc2l0aW9uOiBhbGwgMC4zNXMgZWFzZS1pbi1vdXQ7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQmX19saW5lIHtcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdGhlaWdodDogNHB4O1xyXG5cdFx0dHJhbnNpdGlvbjogYWxsIDAuMzVzIGVhc2UtaW4tb3V0O1xyXG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC02MHB4KTtcclxuXHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdFx0MjcyLjQ4ZGVnLFxyXG5cdFx0XHQjZjNhODU0IDAlLFxyXG5cdFx0XHQjZjM4MDRlIDQzLjEzJSxcclxuXHRcdFx0cmdiYSgyNTUsIDEwNiwgMTA0LCAwLjk1KSA2OS41MyUsXHJcblx0XHRcdCNlYjQwYTYgOTguOCVcclxuXHRcdCk7XHJcblx0XHRib3JkZXItcmFkaXVzOiAyMHB4O1xyXG5cdH1cclxufVxyXG4iXX0= */
