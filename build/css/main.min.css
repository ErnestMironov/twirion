@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Medium.eot);src:local("Geometria Medium"),local("Geometria-Medium"),url(../fonts/Geometria/Geometria-Medium.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Medium.woff) format("woff"),url(../fonts/Geometria/Geometria-Medium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria.eot);src:local("Geometria"),url(../fonts/Geometria/Geometria.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria.woff) format("woff"),url(../fonts/Geometria/Geometria.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Bold.eot);src:local("Geometria Bold"),local("Geometria-Bold"),url(../fonts/Geometria/Geometria-Bold.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Bold.woff) format("woff"),url(../fonts/Geometria/Geometria-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Light.eot);src:local("Geometria Light"),local("Geometria-Light"),url(../fonts/Geometria/Geometria-Light.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Light.woff) format("woff"),url(../fonts/Geometria/Geometria-Light.ttf) format("truetype");font-weight:300;font-style:normal}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;box-sizing:border-box}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;box-sizing:border-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}b{font-weight:700}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}:root{--dark-blue:#21212d;--rose-quartz:#f6edf4;--raspberry:#bf42c6;--raspberry-40p:rgba(191, 66, 198, 0.4);--white:#fff;--dark--grey:#8f8fa0;--light-grey:#c7c7cf;--purple:#2b1e4c;--gradient-1:linear-gradient(
		135deg,
		#eb40a6 0%,
		#ff6a68 34.43%,
		#f3804e 63.08%,
		#f3a854 100%
	);--gradient-1-70p:linear-gradient(
		93.47deg,
		#f572a4 2.86%,
		#fd8a83 35.9%,
		#f59c72 63.41%,
		#f6ba77 92.08%
	);--gradient-1-30p:linear-gradient(
		93.47deg,
		rgba(245, 114, 164, 0.8) 2.86%,
		#f78eb6 2.87%,
		#fca498 35.9%,
		#f7bb8f 63.41%,
		#f9c993 92.08%
	);--gradient-2:linear-gradient(
		180deg,
		#db4aeb 0%,
		#ae41e9 50.58%,
		#8a39e6 100%
	);--dark-gradient:linear-gradient(180deg, #472c77 0%, #261c45 100%);--font-color:var(--dark-blue);--main-font:normal 14px Geometria;--caption:bold 48px/60px Geometria}html{font-size:15px}@media (min-width:1023px) and (max-width:1230px){html{font-size:14px}}body{font:var(--main-font);overflow-x:hidden;max-width:100vw;color:var(--font-color)}.container{display:block;max-width:1110px;margin:auto}@media (min-width:1023px) and (max-width:1230px){.container{padding:0 60px}}@media (max-width:1023px){.container{padding:0 30px}}@media (max-width:647px){.container{padding:0 20px}}.h2{font:var(--caption)}.logo{display:flex;align-items:center;color:var(--rose-quartz)}.logo img{margin-right:13px}.logo__label{font-weight:500;font-size:36px;line-height:45px}.menu{color:var(--rose-quartz)}.menu__list{display:flex}.menu__item{margin-right:60px;font-weight:300;font-size:24px;line-height:30px}.menu__item.active{font-weight:700}.menu__item a{text-decoration:none;color:inherit;transition:all .35s ease-in-out}.menu__line{position:absolute;height:4px;transition:all .35s ease-in-out;transform:translateX(-60px);background:linear-gradient(272.48deg,#f3a854 0,#f3804e 43.13%,rgba(255,106,104,.95) 69.53%,#eb40a6 98.8%);border-radius:20px}.btn{font-size:36px;font-weight:500;line-height:45px;padding:17px 43px;transition:all cubic-bezier(.39,.58,.57,1) .2s;letter-spacing:.01em;color:var(--white);border:0;border-radius:30px;background:var(--gradient-1-70p)}.btn:hover{box-shadow:4px 4px 16px #472c77,-4px -4px 16px #472c77}.card{position:relative;padding:43px 25px 61px;border-radius:30px;background:var(--white);box-shadow:6px 6px 70px rgba(31,32,65,.06),-6px -6px 70px rgba(31,32,65,.06)}.card:hover{color:var(--rose-quartz)}.card:hover:before{transition:all cubic-bezier(.65,.05,.36,1) .4s;opacity:1}.card:hover .card__title{font-weight:700}.card:before{position:absolute;top:0;left:0;width:100%;height:100%;content:"";transition:ease-in .15s;opacity:0;opacity:0;border-radius:30px;background:var(--dark-gradient)}.card__wrap{position:relative;z-index:1}.card__title{font-size:24px;line-height:30px;min-height:60px}.header{padding-top:39px}.header .container{display:flex;align-items:center;justify-content:space-between}.welcome{position:relative;padding-bottom:120px;color:var(--white)}.welcome__bg{position:absolute;z-index:-1;bottom:0;left:0;width:100%}.welcome__cloud{position:absolute;z-index:-1;bottom:0;left:0;width:100%}.welcome__txt{margin-right:20px}.welcome__title{font-size:36px;font-weight:500;line-height:45px}.welcome__desc{font-size:24px;font-weight:400;line-height:30px;margin-top:30px}.welcome__wrap{display:flex;margin-top:182px}.welcome__callback{margin-top:60px}.services{margin-top:30px}.services__title{display:block;text-align:center}.services__list{display:grid;margin-top:70px;grid-template-columns:repeat(3,1fr);grid-gap:63px 33px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
