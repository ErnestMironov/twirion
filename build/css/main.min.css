@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Medium.eot);src:local("Geometria Medium"),local("Geometria-Medium"),url(../fonts/Geometria/Geometria-Medium.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Medium.woff) format("woff"),url(../fonts/Geometria/Geometria-Medium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria.eot);src:local("Geometria"),url(../fonts/Geometria/Geometria.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria.woff) format("woff"),url(../fonts/Geometria/Geometria.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Bold.eot);src:local("Geometria Bold"),local("Geometria-Bold"),url(../fonts/Geometria/Geometria-Bold.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Bold.woff) format("woff"),url(../fonts/Geometria/Geometria-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Geometria;src:url(../fonts/Geometria/Geometria-Light.eot);src:local("Geometria Light"),local("Geometria-Light"),url(../fonts/Geometria/Geometria-Light.eot?#iefix) format("embedded-opentype"),url(../fonts/Geometria/Geometria-Light.woff) format("woff"),url(../fonts/Geometria/Geometria-Light.ttf) format("truetype");font-weight:300;font-style:normal}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;box-sizing:border-box}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;box-sizing:border-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}b{font-weight:700}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}:root{--dark-blue:#21212d;--rose-quartz:#f6edf4;--raspberry:#bf42c6;--raspberry-40p:rgba(191, 66, 198, 0.4);--white:#fff;--dark-grey:#8f8fa0;--light-grey:#c7c7cf;--purple:#2b1e4c;--gradient-1:linear-gradient(
		135deg,
		#eb40a6 0%,
		#ff6a68 34.43%,
		#f3804e 63.08%,
		#f3a854 100%
	);--gradient-1-70p:linear-gradient(
		93.47deg,
		#f572a4 2.86%,
		#fd8a83 35.9%,
		#f59c72 63.41%,
		#f6ba77 92.08%
	);--gradient-1-30p:linear-gradient(
		93.47deg,
		rgba(245, 114, 164, 0.8) 2.86%,
		#f78eb6 2.87%,
		#fca498 35.9%,
		#f7bb8f 63.41%,
		#f9c993 92.08%
	);--gradient-2:linear-gradient(
		180deg,
		#db4aeb 0%,
		#ae41e9 50.58%,
		#8a39e6 100%
	);--dark-gradient:linear-gradient(180deg, #472c77 0%, #261c45 100%);--font-color:var(--dark-blue);--main-font:normal 14px Geometria;--caption:bold 48px/60px Geometria}html{font-size:15px}@media (min-width:1023px) and (max-width:1230px){html{font-size:14px}}body{font:var(--main-font);overflow-x:hidden;max-width:100vw;color:var(--font-color)}.container{display:block;max-width:1110px;margin:auto}@media (min-width:1023px) and (max-width:1230px){.container{padding:0 60px}}@media (max-width:1023px){.container{padding:0 30px}}@media (max-width:647px){.container{padding:0 20px}}.h2{font:var(--caption);text-align:center}.logo{display:flex;align-items:center;color:var(--rose-quartz)}.logo img{margin-right:13px}.logo__label{font-weight:500;font-size:36px;line-height:45px}.menu{color:var(--rose-quartz)}.menu__list{display:flex}.menu__item{font-size:24px;font-weight:300;line-height:30px;margin-right:60px}.menu__item.active{font-weight:700}.menu__item a{transition:all .35s ease-in-out;text-decoration:none;color:inherit}.menu__line{position:absolute;height:4px;transition:all .25s ease-in-out;transform:translateX(-60px);border-radius:20px;background:linear-gradient(272.48deg,#f3a854 0,#f3804e 43.13%,rgba(255,106,104,.95) 69.53%,#eb40a6 98.8%)}.btn{font-size:36px;font-weight:500;line-height:45px;padding:17px 43px;transition:all cubic-bezier(.39,.58,.57,1) .2s;letter-spacing:.01em;color:var(--white);border:0;border-radius:30px;background:var(--gradient-1-70p)}.btn:hover{box-shadow:4px 4px 16px #472c77,-4px -4px 16px #472c77}.go-to{display:flex;overflow:hidden;align-items:center;max-width:58px;height:58px;padding:13px;transition:all cubic-bezier(.4,0,.2,1) .25s;color:var(--white);border:none;border-radius:50px;background:linear-gradient(93.47deg,#f572a4 2.86%,#fd8a83 35.9%,#f59c72 63.41%,#f6ba77 92.08%);background-color:#fff;box-shadow:-4px -4px 16px rgba(31,32,65,.1),4px 4px 16px rgba(31,32,65,.1)}.go-to *{transition:all ease .2s}.go-to:hover{max-width:999px;padding:13px 34px}.go-to:hover img{right:34px}.go-to::after{display:block;width:32px;height:32px;content:""}.go-to img{position:absolute;top:13px;right:13px;width:32px;height:32px}.go-to__txt{font-size:14px;font-weight:700;line-height:18px;margin-right:5px;opacity:0}.card{position:relative;color:var(--dark-grey);border-radius:30px;background:var(--white);box-shadow:6px 6px 70px rgba(31,32,65,.06),-6px -6px 70px rgba(31,32,65,.06)}.card:hover{color:var(--rose-quartz)}.card:hover:before{opacity:1}.card:hover .card__title{font-weight:700;color:var(--rose-quartz)}.card:hover .card__tech-icons li{background:#4c3177;box-shadow:none}.card:hover .go-to{max-width:999px;padding:13px 34px}.card:hover .go-to__txt{opacity:1}.card:hover .go-to img{right:34px}.card:before{position:absolute;top:0;left:0;width:100%;height:100%;content:"";transition:ease-in .15s;opacity:0;opacity:0;border-radius:30px;background:var(--dark-gradient)}.card__wrap{position:relative;z-index:1;padding:43px 25px 61px}.card__title{font-size:24px;line-height:30px;min-height:60px;color:var(--font-color)}.card__tech-icons,.card__tech-names{display:flex;flex-wrap:wrap}.card__tech-names{font-size:14px;font-weight:500;line-height:18px;margin-top:10px}.card__tech-names li{margin-right:5px}.card__tech-names li::after{content:"|"}.card__tech-icons{margin-top:30px}.card__tech-icons li{margin-right:10px;padding:8px;border-radius:50%;background:#f3f3f8;box-shadow:-4px -4px 50px rgba(218,228,248,.25),4px 4px 50px rgba(218,228,248,.25)}.card__desc{font-size:14px;font-weight:500;line-height:18px;margin-top:30px}.card__go-to{position:absolute;bottom:0;left:50%;transform:translate(-50%,50%)}.header{padding-top:39px}.header .container{display:flex;align-items:center;justify-content:space-between}.welcome{position:relative;overflow:hidden;padding-bottom:120px;color:var(--white)}.welcome__bg{position:absolute;z-index:-1;bottom:0;left:0;width:auto;min-width:100%;min-height:100%}.welcome__cloud{position:absolute;z-index:-1;bottom:0;left:0;width:100%}.welcome__txt{margin-right:20px}.welcome__title{font-size:36px;font-weight:500;line-height:45px}.welcome__desc{font-size:24px;font-weight:400;line-height:30px;margin-top:30px}.welcome__wrap{display:flex;margin-top:182px}.welcome__callback{margin-top:60px}.services{margin-top:30px}.services__list{display:grid;margin-top:70px;grid-template-columns:repeat(3,1fr);grid-gap:63px 33px}.about-us{margin-top:108px;color:var(--white)}.about-us__why{position:relative;z-index:1;width:1362px;max-width:calc(100% - 60px);margin:auto;padding:60px 0;border-radius:30px;background:var(--gradient-1-70p)}.about-us__digital-list{display:grid;margin-top:52px;grid-template-columns:repeat(3,1fr);grid-gap:50px}.about-us__digital-item{display:flex;flex-direction:column}.about-us__digital-title{font-size:36px;line-height:45px;letter-spacing:.01em}@media (min-width:1023px) and (max-width:1230px){.about-us__digital-title{font-size:30px;line-height:normal}}.about-us__digital-number{font-size:72px;font-weight:700;line-height:91px;margin-top:22px;letter-spacing:.01em}.about-us__how{margin-top:-180px;padding-top:250px;background:var(--dark-gradient)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2ZvbnRzL0dlb21ldHJpYS9zdHlsZXNoZWV0LmNzcyIsIm1haW4uY3NzIiwiY29tbW9uL19yZXNldC5zY3NzIiwiY29tbW9uL192YXJpYWJsZXMuc2NzcyIsImNvbW1vbi9fYmFzZS5zY3NzIiwiY29tcG9uZW50cy9fbG9nby5zY3NzIiwiY29tcG9uZW50cy9fbWVudS5zY3NzIiwiY29tcG9uZW50cy9fYnV0dG9uLnNjc3MiLCJjb21wb25lbnRzL19nby10by5zY3NzIiwiY29tcG9uZW50cy9fY2FyZC5zY3NzIiwiY29tcG9uZW50cy9faGVhZGVyLnNjc3MiLCJjb21wb25lbnRzL193ZWxjb21lLnNjc3MiLCJjb21wb25lbnRzL19zZXJ2aWNlcy5zY3NzIiwiY29tcG9uZW50cy9fYWJvdXQtdXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5REEsV0FDQyxZQUFhLFVBQ2IsSUFBSyw2Q0FDTCxJQUFLLHlCQUF5QixDQUFFLHlCQUF5QixDQUN4RCxvREFBbUMsMkJBQTJCLENBQzlELDhDQUE2QixjQUFjLENBQzNDLDZDQUE0QixtQkFDN0IsWUFBYSxJQUNiLFdBQVksT0FvQ2IsV0FDQyxZQUFhLFVBQ2IsSUFBSyxzQ0FDTCxJQUFLLGtCQUFrQixDQUN0Qiw2Q0FBNEIsMkJBQTJCLENBQ3ZELHVDQUFzQixjQUFjLENBQ3BDLHNDQUFxQixtQkFDdEIsWUFBYSxJQUNiLFdBQVksT0FHYixXQUNDLFlBQWEsVUFDYixJQUFLLDJDQUNMLElBQUssdUJBQXVCLENBQUUsdUJBQXVCLENBQ3BELGtEQUFpQywyQkFBMkIsQ0FDNUQsNENBQTJCLGNBQWMsQ0FDekMsMkNBQTBCLG1CQUMzQixZQUFhLElBQ2IsV0FBWSxPQW9DYixXQUNDLFlBQWEsVUFDYixJQUFLLDRDQUNMLElBQUssd0JBQXdCLENBQUUsd0JBQXdCLENBQ3RELG1EQUFrQywyQkFBMkIsQ0FDN0QsNkNBQTRCLGNBQWMsQ0FDMUMsNENBQTJCLG1CQUM1QixZQUFhLElBQ2IsV0FBWSxPQzdK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WXZtQkosd0JBQ0MsUUFBQSxLQUVBLGVBQUEsT0FDQSx5QkFDQyxVQUFBLEtBQ0EsWUFBQSxLQUVBLGVBQUEsTUFDQSxpREFDQSx5QkFDQSxVQUFBLEtBRUEsWUFBQSxRWnNtQkEsMEJZbm1CRCxVQUFBLEtBQ0MsWUFBQSxJQUVBLFlBQUEsS0FDQSxXQUFBLEtBQ0EsZUFBQSxNQUVELGVBQ0MsV0FBQSxPQUNBLFlBQUEsTUFFRCxXQUFBIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBzdHlsZXNoZWV0IGdlbmVyYXRlZCBieSBUcmFuc2ZvbnRlciAoaHR0cHM6Ly90cmFuc2ZvbnRlci5vcmcpIG9uIEp1bHkgNCwgMjAxNyAyOjQ4IEFNICovXG5cbi8qIEBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtVGhpbi5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIFRoaW4nKSwgbG9jYWwoJ0dlb21ldHJpYS1UaGluJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtVGhpbi5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLVRoaW4ud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLVRoaW4udHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogMTAwO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtTWVkaXVtSXRhbGljLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgTWVkaXVtSXRhbGljJyksIGxvY2FsKCdHZW9tZXRyaWEtTWVkaXVtSXRhbGljJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtTWVkaXVtSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtTWVkaXVtSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1NZWRpdW1JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogNTAwO1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtSXRhbGljLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgSXRhbGljJyksIGxvY2FsKCdHZW9tZXRyaWEtSXRhbGljJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtSGVhdnkuZW90Jyk7XG5cdHNyYzogbG9jYWwoJ0dlb21ldHJpYSBIZWF2eScpLCBsb2NhbCgnR2VvbWV0cmlhLUhlYXZ5JyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtSGVhdnkuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1IZWF2eS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtSGVhdnkudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogOTAwO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtRXh0cmFCb2xkSXRhbGljLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgRXh0cmFCb2xkSXRhbGljJyksIGxvY2FsKCdHZW9tZXRyaWEtRXh0cmFCb2xkSXRhbGljJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFCb2xkSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFCb2xkSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1FeHRyYUJvbGRJdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogODAwO1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG59XG4qL1xuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiBcIkdlb21ldHJpYVwiO1xuXHRzcmM6IHVybChcIkdlb21ldHJpYS1NZWRpdW0uZW90XCIpO1xuXHRzcmM6IGxvY2FsKFwiR2VvbWV0cmlhIE1lZGl1bVwiKSwgbG9jYWwoXCJHZW9tZXRyaWEtTWVkaXVtXCIpLFxuXHRcdHVybChcIkdlb21ldHJpYS1NZWRpdW0uZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEtTWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEtTWVkaXVtLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcblx0Zm9udC13ZWlnaHQ6IDUwMDtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xufVxuLypcbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0dlb21ldHJpYSc7XG5cdHNyYzogdXJsKCdHZW9tZXRyaWEtQm9sZEl0YWxpYy5lb3QnKTtcblx0c3JjOiBsb2NhbCgnR2VvbWV0cmlhIEJvbGRJdGFsaWMnKSwgbG9jYWwoJ0dlb21ldHJpYS1Cb2xkSXRhbGljJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtQm9sZEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUJvbGRJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUJvbGRJdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuXHRmb250LXdlaWdodDogYm9sZDtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLUxpZ2h0SXRhbGljLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgTGlnaHRJdGFsaWMnKSwgbG9jYWwoJ0dlb21ldHJpYS1MaWdodEl0YWxpYycpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUxpZ2h0SXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtTGlnaHRJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUxpZ2h0SXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IDMwMDtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLUhlYXZ5SXRhbGljLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgSGVhdnlJdGFsaWMnKSwgbG9jYWwoJ0dlb21ldHJpYS1IZWF2eUl0YWxpYycpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUhlYXZ5SXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtSGVhdnlJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUhlYXZ5SXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IDkwMDtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufSAqL1xuXG5AZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6IFwiR2VvbWV0cmlhXCI7XG5cdHNyYzogdXJsKFwiR2VvbWV0cmlhLmVvdFwiKTtcblx0c3JjOiBsb2NhbChcIkdlb21ldHJpYVwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSxcblx0XHR1cmwoXCJHZW9tZXRyaWEud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLFxuXHRcdHVybChcIkdlb21ldHJpYS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiBcIkdlb21ldHJpYVwiO1xuXHRzcmM6IHVybChcIkdlb21ldHJpYS1Cb2xkLmVvdFwiKTtcblx0c3JjOiBsb2NhbChcIkdlb21ldHJpYSBCb2xkXCIpLCBsb2NhbChcIkdlb21ldHJpYS1Cb2xkXCIpLFxuXHRcdHVybChcIkdlb21ldHJpYS1Cb2xkLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksXG5cdFx0dXJsKFwiR2VvbWV0cmlhLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLFxuXHRcdHVybChcIkdlb21ldHJpYS1Cb2xkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuLyogQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiAnR2VvbWV0cmlhJztcblx0c3JjOiB1cmwoJ0dlb21ldHJpYS1FeHRyYUJvbGQuZW90Jyk7XG5cdHNyYzogbG9jYWwoJ0dlb21ldHJpYSBFeHRyYUJvbGQnKSwgbG9jYWwoJ0dlb21ldHJpYS1FeHRyYUJvbGQnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1FeHRyYUJvbGQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1FeHRyYUJvbGQud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUV4dHJhQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdGZvbnQtd2VpZ2h0OiA4MDA7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiAnR2VvbWV0cmlhJztcblx0c3JjOiB1cmwoJ0dlb21ldHJpYS1UaGluSXRhbGljLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgVGhpbkl0YWxpYycpLCBsb2NhbCgnR2VvbWV0cmlhLVRoaW5JdGFsaWMnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1UaGluSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtVGhpbkl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtVGhpbkl0YWxpYy50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdGZvbnQtd2VpZ2h0OiAxMDA7XG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiAnR2VvbWV0cmlhJztcblx0c3JjOiB1cmwoJ0dlb21ldHJpYS1FeHRyYUxpZ2h0SXRhbGljLmVvdCcpO1xuXHRzcmM6IGxvY2FsKCdHZW9tZXRyaWEgRXh0cmFMaWdodEl0YWxpYycpLCBsb2NhbCgnR2VvbWV0cmlhLUV4dHJhTGlnaHRJdGFsaWMnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1FeHRyYUxpZ2h0SXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFMaWdodEl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG5cdFx0dXJsKCdHZW9tZXRyaWEtRXh0cmFMaWdodEl0YWxpYy50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdGZvbnQtd2VpZ2h0OiAyMDA7XG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcbn0gKi9cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OiBcIkdlb21ldHJpYVwiO1xuXHRzcmM6IHVybChcIkdlb21ldHJpYS1MaWdodC5lb3RcIik7XG5cdHNyYzogbG9jYWwoXCJHZW9tZXRyaWEgTGlnaHRcIiksIGxvY2FsKFwiR2VvbWV0cmlhLUxpZ2h0XCIpLFxuXHRcdHVybChcIkdlb21ldHJpYS1MaWdodC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLFxuXHRcdHVybChcIkdlb21ldHJpYS1MaWdodC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksXG5cdFx0dXJsKFwiR2VvbWV0cmlhLUxpZ2h0LnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcblx0Zm9udC13ZWlnaHQ6IDMwMDtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4vKiBAZm9udC1mYWNlIHtcblx0Zm9udC1mYW1pbHk6ICdHZW9tZXRyaWEnO1xuXHRzcmM6IHVybCgnR2VvbWV0cmlhLUV4dHJhTGlnaHQuZW90Jyk7XG5cdHNyYzogbG9jYWwoJ0dlb21ldHJpYSBFeHRyYUxpZ2h0JyksIGxvY2FsKCdHZW9tZXRyaWEtRXh0cmFMaWdodCcpLFxuXHRcdHVybCgnR2VvbWV0cmlhLUV4dHJhTGlnaHQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1FeHRyYUxpZ2h0LndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHR1cmwoJ0dlb21ldHJpYS1FeHRyYUxpZ2h0LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IDIwMDtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xufSAqL1xuIiwiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC9cclxuICAgdjIuMC1tb2RpZmllZCB8IDIwMTEwMTI2XHJcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXHJcbiovXG5AaW1wb3J0IHVybCguLi9mb250cy9HZW9tZXRyaWEvc3R5bGVzaGVldC5jc3MpO1xuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcbmIsIHUsIGksIGNlbnRlcixcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4vKiBtYWtlIHN1cmUgdG8gc2V0IHNvbWUgZm9jdXMgc3R5bGVzIGZvciBhY2Nlc3NpYmlsaXR5ICovXG46Zm9jdXMge1xuICBvdXRsaW5lOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cblxub2wsIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lOyB9XG5cbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1idXR0b24sXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLXJlc3VsdHMtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lOyB9XG5cbmlucHV0W3R5cGU9c2VhcmNoXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICByZXNpemU6IHZlcnRpY2FsOyB9XG5cbi8qKlxyXG4gKiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgNi83LzgvOSBhbmQgRmlyZWZveCAzLlxyXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICpkaXNwbGF5OiBpbmxpbmU7XG4gICp6b29tOiAxO1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuLyoqXHJcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXHJcbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXHJcbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxyXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgNy84LzksIEZpcmVmb3ggMywgYW5kIFNhZmFyaSA0LlxyXG4gKiBLbm93biBpc3N1ZTogbm8gSUUgNiBzdXBwb3J0LlxyXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0ZXh0IHJlc2l6aW5nIG9kZGx5IGluIElFIDYvNyB3aGVuIGJvZHkgYGZvbnQtc2l6ZWAgaXMgc2V0IHVzaW5nXHJcbiAqICAgIGBlbWAgdW5pdHMuXHJcbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xyXG4gKiAgICB1c2VyIHpvb20uXHJcbiAqL1xuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogQWRkcmVzcyBgb3V0bGluZWAgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuIENocm9tZSBhbmQgb3RoZXIgYnJvd3NlcnMuXHJcbiAqL1xuYTpmb2N1cyB7XG4gIG91dGxpbmU6IHRoaW4gZG90dGVkOyB9XG5cbi8qKlxyXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cclxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwOyB9XG5cbi8qKlxyXG4gKiAxLiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDYvNy84LzkgYW5kIEZpcmVmb3ggMy5cclxuICogMi4gSW1wcm92ZSBpbWFnZSBxdWFsaXR5IHdoZW4gc2NhbGVkIGluIElFIDcuXHJcbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgNi83LzgvOSwgU2FmYXJpIDUsIGFuZCBPcGVyYSAxMS5cclxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXHJcbiAqIENvcnJlY3QgbWFyZ2luIGRpc3BsYXllZCBvZGRseSBpbiBJRSA2LzcuXHJcbiAqL1xuZm9ybSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcclxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxyXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgNi83LzgvOS5cclxuICogMi4gQ29ycmVjdCB0ZXh0IG5vdCB3cmFwcGluZyBpbiBGaXJlZm94IDMuXHJcbiAqIDMuIENvcnJlY3QgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRSA2LzcuXHJcbiAqL1xubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDIgKi9cbiAgKm1hcmdpbi1sZWZ0OiAtN3B4O1xuICAvKiAzICovIH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgZm9udCBzaXplIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFIDYvNywgRmlyZWZveCAzKywgU2FmYXJpIDUsXHJcbiAqICAgIGFuZCBDaHJvbWUuXHJcbiAqIDMuIEltcHJvdmUgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMyAqL1xuICAqdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgLyogMyAqLyB9XG5cbi8qKlxyXG4gKiBBZGRyZXNzIEZpcmVmb3ggMysgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXHJcbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxyXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxyXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxyXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIENocm9tZSwgU2FmYXJpIDUrLCBhbmQgSUUgNisuXHJcbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCA0KyBhbmQgT3BlcmEuXHJcbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXHJcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXHJcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxyXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXHJcbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXHJcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cclxuICogNC4gUmVtb3ZlIGlubmVyIHNwYWNpbmcgaW4gSUUgNyB3aXRob3V0IGFmZmVjdGluZyBub3JtYWwgdGV4dCBpbnB1dHMuXHJcbiAqICAgIEtub3duIGlzc3VlOiBpbm5lciBzcGFjaW5nIHJlbWFpbnMgaW4gSUUgNi5cclxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovXG4gICpvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogNCAqLyB9XG5cbi8qKlxyXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxyXG4gKi9cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG4vKipcclxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBjb250ZW50LWJveCBpbiBJRSA4LzkuXHJcbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkuXHJcbiAqIDMuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA3LlxyXG4gKiAgICBLbm93biBpc3N1ZTogZXhjZXNzIHBhZGRpbmcgcmVtYWlucyBpbiBJRSA2LlxyXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xuICAqaGVpZ2h0OiAxM3B4O1xuICAvKiAzICovXG4gICp3aWR0aDogMTNweDtcbiAgLyogMyAqLyB9XG5cbi8qKlxyXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lLlxyXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSA1IGFuZCBDaHJvbWVcclxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXHJcbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cblxuLyoqXHJcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXHJcbiAqIG9uIE9TIFguXHJcbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXHJcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCAzKy5cclxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcclxuICogMS4gUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDYvNy84LzkuXHJcbiAqIDIuIEltcHJvdmUgcmVhZGFiaWxpdHkgYW5kIGFsaWdubWVudCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cclxuICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbmh0bWwsXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6ICMyMjI7IH1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogI2IzZDRmYztcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuaW1nIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG5iIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLmNocm9tZWZyYW1lIHtcbiAgbWFyZ2luOiAwLjJlbSAwO1xuICBiYWNrZ3JvdW5kOiAjY2NjO1xuICBjb2xvcjogIzAwMDtcbiAgcGFkZGluZzogMC4yZW0gMDsgfVxuXG46cm9vdCB7XG4gIC0tZGFyay1ibHVlOiAjMjEyMTJkO1xuICAtLXJvc2UtcXVhcnR6OiAjZjZlZGY0O1xuICAtLXJhc3BiZXJyeTogI2JmNDJjNjtcbiAgLS1yYXNwYmVycnktNDBwOiByZ2JhKDE5MSwgNjYsIDE5OCwgMC40KTtcbiAgLS13aGl0ZTogI2ZmZjtcbiAgLS1kYXJrLWdyZXk6ICM4ZjhmYTA7XG4gIC0tbGlnaHQtZ3JleTogI2M3YzdjZjtcbiAgLS1wdXJwbGU6ICMyYjFlNGM7XG4gIC0tZ3JhZGllbnQtMTogbGluZWFyLWdyYWRpZW50KFxyXG5cdFx0MTM1ZGVnLFxyXG5cdFx0I2ViNDBhNiAwJSxcclxuXHRcdCNmZjZhNjggMzQuNDMlLFxyXG5cdFx0I2YzODA0ZSA2My4wOCUsXHJcblx0XHQjZjNhODU0IDEwMCVcclxuXHQpO1xuICAtLWdyYWRpZW50LTEtNzBwOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHQ5My40N2RlZyxcclxuXHRcdCNmNTcyYTQgMi44NiUsXHJcblx0XHQjZmQ4YTgzIDM1LjklLFxyXG5cdFx0I2Y1OWM3MiA2My40MSUsXHJcblx0XHQjZjZiYTc3IDkyLjA4JVxyXG5cdCk7XG4gIC0tZ3JhZGllbnQtMS0zMHA6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdDkzLjQ3ZGVnLFxyXG5cdFx0cmdiYSgyNDUsIDExNCwgMTY0LCAwLjgpIDIuODYlLFxyXG5cdFx0I2Y3OGViNiAyLjg3JSxcclxuXHRcdCNmY2E0OTggMzUuOSUsXHJcblx0XHQjZjdiYjhmIDYzLjQxJSxcclxuXHRcdCNmOWM5OTMgOTIuMDglXHJcblx0KTtcbiAgLS1ncmFkaWVudC0yOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHQxODBkZWcsXHJcblx0XHQjZGI0YWViIDAlLFxyXG5cdFx0I2FlNDFlOSA1MC41OCUsXHJcblx0XHQjOGEzOWU2IDEwMCVcclxuXHQpO1xuICAtLWRhcmstZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICM0NzJjNzcgMCUsICMyNjFjNDUgMTAwJSk7XG4gIC0tZm9udC1jb2xvcjogdmFyKC0tZGFyay1ibHVlKTtcbiAgLS1tYWluLWZvbnQ6IG5vcm1hbCAxNHB4IEdlb21ldHJpYTtcbiAgLS1jYXB0aW9uOiBib2xkIDQ4cHgvNjBweCBHZW9tZXRyaWE7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTVweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyM3B4KSBhbmQgKG1heC13aWR0aDogMTIzMHB4KSB7XG4gICAgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuXG5ib2R5IHtcbiAgZm9udDogdmFyKC0tbWFpbi1mb250KTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBtYXgtd2lkdGg6IDEwMHZ3O1xuICBjb2xvcjogdmFyKC0tZm9udC1jb2xvcik7IH1cblxuLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDExMTBweDtcbiAgbWFyZ2luOiBhdXRvOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDIzcHgpIGFuZCAobWF4LXdpZHRoOiAxMjMwcHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgNjBweDsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgMzBweDsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2NDdweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMCAyMHB4OyB9IH1cblxuLmgyIHtcbiAgZm9udDogdmFyKC0tY2FwdGlvbik7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiB2YXIoLS1yb3NlLXF1YXJ0eik7IH1cbiAgLmxvZ28gaW1nIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEzcHg7IH1cbiAgLmxvZ29fX2xhYmVsIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICBsaW5lLWhlaWdodDogNDVweDsgfVxuXG4ubWVudSB7XG4gIGNvbG9yOiB2YXIoLS1yb3NlLXF1YXJ0eik7IH1cbiAgLm1lbnVfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgLm1lbnVfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgIG1hcmdpbi1yaWdodDogNjBweDsgfVxuICAgIC5tZW51X19pdGVtLmFjdGl2ZSB7XG4gICAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICAgIC5tZW51X19pdGVtIGEge1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMzVzIGVhc2UtaW4tb3V0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6IGluaGVyaXQ7IH1cbiAgLm1lbnVfX2xpbmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBoZWlnaHQ6IDRweDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC02MHB4KTtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgyNzIuNDhkZWcsICNmM2E4NTQgMCUsICNmMzgwNGUgNDMuMTMlLCByZ2JhKDI1NSwgMTA2LCAxMDQsIDAuOTUpIDY5LjUzJSwgI2ViNDBhNiA5OC44JSk7IH1cblxuLmJ0biB7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGluZS1oZWlnaHQ6IDQ1cHg7XG4gIHBhZGRpbmc6IDE3cHggNDNweDtcbiAgdHJhbnNpdGlvbjogYWxsIGN1YmljLWJlemllcigwLjM5LCAwLjU4LCAwLjU3LCAxKSAwLjJzO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBjb2xvcjogdmFyKC0td2hpdGUpO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gIGJhY2tncm91bmQ6IHZhcigtLWdyYWRpZW50LTEtNzBwKTsgfVxuICAuYnRuOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiA0cHggNHB4IDE2cHggIzQ3MmM3NywgLTRweCAtNHB4IDE2cHggIzQ3MmM3NzsgfVxuXG4uZ28tdG8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXgtd2lkdGg6IDU4cHg7XG4gIGhlaWdodDogNThweDtcbiAgcGFkZGluZzogMTNweDtcbiAgdHJhbnNpdGlvbjogYWxsIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSkgMC4yNXM7XG4gIGNvbG9yOiB2YXIoLS13aGl0ZSk7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkzLjQ3ZGVnLCAjZjU3MmE0IDIuODYlLCAjZmQ4YTgzIDM1LjklLCAjZjU5YzcyIDYzLjQxJSwgI2Y2YmE3NyA5Mi4wOCUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3gtc2hhZG93OiAtNHB4IC00cHggMTZweCByZ2JhKDMxLCAzMiwgNjUsIDAuMSksIDRweCA0cHggMTZweCByZ2JhKDMxLCAzMiwgNjUsIDAuMSk7IH1cbiAgLmdvLXRvICoge1xuICAgIHRyYW5zaXRpb246IGFsbCBlYXNlIDAuMnM7IH1cbiAgLmdvLXRvOmhvdmVyIHtcbiAgICBtYXgtd2lkdGg6IDk5OXB4O1xuICAgIHBhZGRpbmc6IDEzcHggMzRweDsgfVxuICAgIC5nby10bzpob3ZlciBpbWcge1xuICAgICAgcmlnaHQ6IDM0cHg7IH1cbiAgLmdvLXRvOjphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDMycHg7XG4gICAgaGVpZ2h0OiAzMnB4O1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgLmdvLXRvIGltZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTNweDtcbiAgICByaWdodDogMTNweDtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7IH1cbiAgLmdvLXRvX190eHQge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICBvcGFjaXR5OiAwOyB9XG5cbi5jYXJkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogdmFyKC0tZGFyay1ncmV5KTtcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgYmFja2dyb3VuZDogdmFyKC0td2hpdGUpO1xuICBib3gtc2hhZG93OiA2cHggNnB4IDcwcHggcmdiYSgzMSwgMzIsIDY1LCAwLjA2KSwgLTZweCAtNnB4IDcwcHggcmdiYSgzMSwgMzIsIDY1LCAwLjA2KTsgfVxuICAuY2FyZDpob3ZlciB7XG4gICAgY29sb3I6IHZhcigtLXJvc2UtcXVhcnR6KTsgfVxuICAgIC5jYXJkOmhvdmVyOmJlZm9yZSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLmNhcmQ6aG92ZXIgLmNhcmRfX3RpdGxlIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgY29sb3I6IHZhcigtLXJvc2UtcXVhcnR6KTsgfVxuICAgIC5jYXJkOmhvdmVyIC5jYXJkX190ZWNoLWljb25zIGxpIHtcbiAgICAgIGJhY2tncm91bmQ6ICM0YzMxNzc7XG4gICAgICBib3gtc2hhZG93OiBub25lOyB9XG4gICAgLmNhcmQ6aG92ZXIgLmdvLXRvIHtcbiAgICAgIG1heC13aWR0aDogOTk5cHg7XG4gICAgICBwYWRkaW5nOiAxM3B4IDM0cHg7IH1cbiAgICAgIC5jYXJkOmhvdmVyIC5nby10b19fdHh0IHtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgICAgLmNhcmQ6aG92ZXIgLmdvLXRvIGltZyB7XG4gICAgICAgIHJpZ2h0OiAzNHB4OyB9XG4gIC5jYXJkOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHRyYW5zaXRpb246IGVhc2UtaW4gMC4xNXM7XG4gICAgb3BhY2l0eTogMDtcbiAgICBvcGFjaXR5OiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tZGFyay1ncmFkaWVudCk7IH1cbiAgLmNhcmRfX3dyYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIHBhZGRpbmc6IDQzcHggMjVweCA2MXB4OyB9XG4gIC5jYXJkX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgIG1pbi1oZWlnaHQ6IDYwcHg7XG4gICAgY29sb3I6IHZhcigtLWZvbnQtY29sb3IpOyB9XG4gIC5jYXJkX190ZWNoLW5hbWVzLCAuY2FyZF9fdGVjaC1pY29ucyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgLmNhcmRfX3RlY2gtbmFtZXMge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgIG1hcmdpbi10b3A6IDEwcHg7IH1cbiAgICAuY2FyZF9fdGVjaC1uYW1lcyBsaSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDVweDsgfVxuICAgICAgLmNhcmRfX3RlY2gtbmFtZXMgbGk6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJ8XCI7IH1cbiAgLmNhcmRfX3RlY2gtaWNvbnMge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7IH1cbiAgICAuY2FyZF9fdGVjaC1pY29ucyBsaSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgICBwYWRkaW5nOiA4cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjNmM2Y4O1xuICAgICAgYm94LXNoYWRvdzogLTRweCAtNHB4IDUwcHggcmdiYSgyMTgsIDIyOCwgMjQ4LCAwLjI1KSwgNHB4IDRweCA1MHB4IHJnYmEoMjE4LCAyMjgsIDI0OCwgMC4yNSk7IH1cbiAgLmNhcmRfX2Rlc2Mge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgIG1hcmdpbi10b3A6IDMwcHg7IH1cbiAgLmNhcmRfX2dvLXRvIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCA1MCUpOyB9XG5cbi5oZWFkZXIge1xuICBwYWRkaW5nLXRvcDogMzlweDsgfVxuICAuaGVhZGVyIC5jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cblxuLndlbGNvbWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmctYm90dG9tOiAxMjBweDtcbiAgY29sb3I6IHZhcigtLXdoaXRlKTsgfVxuICAud2VsY29tZV9fYmcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtaW4td2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMTAwJTsgfVxuICAud2VsY29tZV9fY2xvdWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAud2VsY29tZV9fdHh0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7IH1cbiAgLndlbGNvbWVfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBsaW5lLWhlaWdodDogNDVweDsgfVxuICAud2VsY29tZV9fZGVzYyB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgbWFyZ2luLXRvcDogMzBweDsgfVxuICAud2VsY29tZV9fd3JhcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW4tdG9wOiAxODJweDsgfVxuICAud2VsY29tZV9fY2FsbGJhY2sge1xuICAgIG1hcmdpbi10b3A6IDYwcHg7IH1cblxuLnNlcnZpY2VzIHtcbiAgbWFyZ2luLXRvcDogMzBweDsgfVxuICAuc2VydmljZXNfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgbWFyZ2luLXRvcDogNzBweDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICAgIGdyaWQtZ2FwOiA2M3B4IDMzcHg7IH1cblxuLmFib3V0LXVzIHtcbiAgbWFyZ2luLXRvcDogMTA4cHg7XG4gIGNvbG9yOiB2YXIoLS13aGl0ZSk7IH1cbiAgLmFib3V0LXVzX193aHkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIHdpZHRoOiAxMzYycHg7XG4gICAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSA2MHB4KTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogNjBweCAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tZ3JhZGllbnQtMS03MHApOyB9XG4gIC5hYm91dC11c19fZGlnaXRhbC1saXN0IHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIG1hcmdpbi10b3A6IDUycHg7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgICBncmlkLWdhcDogNTBweDsgfVxuICAuYWJvdXQtdXNfX2RpZ2l0YWwtaXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gIC5hYm91dC11c19fZGlnaXRhbC10aXRsZSB7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiA0NXB4O1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjAxZW07IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyM3B4KSBhbmQgKG1heC13aWR0aDogMTIzMHB4KSB7XG4gICAgICAuYWJvdXQtdXNfX2RpZ2l0YWwtdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7IH0gfVxuICAuYWJvdXQtdXNfX2RpZ2l0YWwtbnVtYmVyIHtcbiAgICBmb250LXNpemU6IDcycHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbGluZS1oZWlnaHQ6IDkxcHg7XG4gICAgbWFyZ2luLXRvcDogMjJweDtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtOyB9XG4gIC5hYm91dC11c19faG93IHtcbiAgICBtYXJnaW4tdG9wOiAtMTgwcHg7XG4gICAgcGFkZGluZy10b3A6IDI1MHB4O1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWRhcmstZ3JhZGllbnQpOyB9XG4iLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xyXG4gICB2Mi4wLW1vZGlmaWVkIHwgMjAxMTAxMjZcclxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcclxuKi9cclxuXHJcbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxyXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXHJcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcclxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcclxuYiwgdSwgaSwgY2VudGVyLFxyXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxyXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcclxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXHJcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxyXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsXHJcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxyXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xyXG4gIG1hcmdpbjogMDtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdGJvcmRlcjogMDtcclxuXHRmb250LXNpemU6IDEwMCU7XHJcblx0Zm9udDogaW5oZXJpdDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi8qIG1ha2Ugc3VyZSB0byBzZXQgc29tZSBmb2N1cyBzdHlsZXMgZm9yIGFjY2Vzc2liaWxpdHkgKi9cclxuOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IDA7XHJcbn1cclxuXHJcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cclxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcclxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuYm9keSB7XHJcblx0bGluZS1oZWlnaHQ6IDE7XHJcbn1cclxuXHJcbm9sLCB1bCB7XHJcblx0bGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuYmxvY2txdW90ZSwgcSB7XHJcblx0cXVvdGVzOiBub25lO1xyXG59XHJcblxyXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcclxucTpiZWZvcmUsIHE6YWZ0ZXIge1xyXG5cdGNvbnRlbnQ6ICcnO1xyXG5cdGNvbnRlbnQ6IG5vbmU7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG5cdGJvcmRlci1zcGFjaW5nOiAwO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXHJcbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcclxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWRlY29yYXRpb24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gICAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPXNlYXJjaF0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gICAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xyXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgcmVzaXplOiB2ZXJ0aWNhbDtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA2LzcvOC85IGFuZCBGaXJlZm94IDMuXHJcbiAqL1xyXG5cclxuYXVkaW8sXHJcbmNhbnZhcyxcclxudmlkZW8ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgKmRpc3BsYXk6IGlubGluZTtcclxuICAgICp6b29tOiAxO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cclxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cclxuICovXHJcblxyXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIGhlaWdodDogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA3LzgvOSwgRmlyZWZveCAzLCBhbmQgU2FmYXJpIDQuXHJcbiAqIEtub3duIGlzc3VlOiBubyBJRSA2IHN1cHBvcnQuXHJcbiAqL1xyXG5cclxuW2hpZGRlbl0ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRSA2Lzcgd2hlbiBib2R5IGBmb250LXNpemVgIGlzIHNldCB1c2luZ1xyXG4gKiAgICBgZW1gIHVuaXRzLlxyXG4gKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcclxuICogICAgdXNlciB6b29tLlxyXG4gKi9cclxuXHJcbmh0bWwge1xyXG4gICAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXHJcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxuICAgIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIGBvdXRsaW5lYCBpbmNvbnNpc3RlbmN5IGJldHdlZW4gQ2hyb21lIGFuZCBvdGhlciBicm93c2Vycy5cclxuICovXHJcblxyXG5hOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IHRoaW4gZG90dGVkO1xyXG59XHJcblxyXG4vKipcclxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuYTphY3RpdmUsXHJcbmE6aG92ZXIge1xyXG4gICAgb3V0bGluZTogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgNi83LzgvOSBhbmQgRmlyZWZveCAzLlxyXG4gKiAyLiBJbXByb3ZlIGltYWdlIHF1YWxpdHkgd2hlbiBzY2FsZWQgaW4gSUUgNy5cclxuICovXHJcblxyXG5pbWcge1xyXG4gICAgYm9yZGVyOiAwOyAvKiAxICovXHJcbiAgICAtbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBiaWN1YmljOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA2LzcvOC85LCBTYWZhcmkgNSwgYW5kIE9wZXJhIDExLlxyXG4gKi9cclxuXHJcbmZpZ3VyZSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IG1hcmdpbiBkaXNwbGF5ZWQgb2RkbHkgaW4gSUUgNi83LlxyXG4gKi9cclxuXHJcbmZvcm0ge1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxyXG4gKi9cclxuXHJcbmZpZWxkc2V0IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XHJcbiAgICBtYXJnaW46IDAgMnB4O1xyXG4gICAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDYvNy84LzkuXHJcbiAqIDIuIENvcnJlY3QgdGV4dCBub3Qgd3JhcHBpbmcgaW4gRmlyZWZveCAzLlxyXG4gKiAzLiBDb3JyZWN0IGFsaWdubWVudCBkaXNwbGF5ZWQgb2RkbHkgaW4gSUUgNi83LlxyXG4gKi9cclxuXHJcbmxlZ2VuZCB7XHJcbiAgICBib3JkZXI6IDA7IC8qIDEgKi9cclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAyICovXHJcbiAgICAqbWFyZ2luLWxlZnQ6IC03cHg7IC8qIDMgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgZm9udCBzaXplIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFIDYvNywgRmlyZWZveCAzKywgU2FmYXJpIDUsXHJcbiAqICAgIGFuZCBDaHJvbWUuXHJcbiAqIDMuIEltcHJvdmUgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gICAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXHJcbiAgICBtYXJnaW46IDA7IC8qIDIgKi9cclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMyAqL1xyXG4gICAgKnZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IC8qIDMgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgRmlyZWZveCAzKyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cclxuICogdGhlIFVBIHN0eWxlc2hlZXQuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCB7XHJcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxyXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxyXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIENocm9tZSwgU2FmYXJpIDUrLCBhbmQgSUUgNisuXHJcbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCA0KyBhbmQgT3BlcmEuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5zZWxlY3Qge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxyXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cclxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxyXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxyXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXHJcbiAqIDQuIFJlbW92ZSBpbm5lciBzcGFjaW5nIGluIElFIDcgd2l0aG91dCBhZmZlY3Rpbmcgbm9ybWFsIHRleHQgaW5wdXRzLlxyXG4gKiAgICBLbm93biBpc3N1ZTogaW5uZXIgc3BhY2luZyByZW1haW5zIGluIElFIDYuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cclxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxyXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cclxuICAgICpvdmVyZmxvdzogdmlzaWJsZTsgIC8qIDQgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXHJcbiAqL1xyXG5cclxuYnV0dG9uW2Rpc2FibGVkXSxcclxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xyXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBjb250ZW50LWJveCBpbiBJRSA4LzkuXHJcbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkuXHJcbiAqIDMuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA3LlxyXG4gKiAgICBLbm93biBpc3N1ZTogZXhjZXNzIHBhZGRpbmcgcmVtYWlucyBpbiBJRSA2LlxyXG4gKi9cclxuXHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcclxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICAgIHBhZGRpbmc6IDA7IC8qIDIgKi9cclxuICAgICpoZWlnaHQ6IDEzcHg7IC8qIDMgKi9cclxuICAgICp3aWR0aDogMTNweDsgLyogMyAqL1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIDUgYW5kIENocm9tZS5cclxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXHJcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxyXG4gKi9cclxuXHJcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cclxuICAgIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXHJcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXHJcbiAqIG9uIE9TIFguXHJcbiAqL1xyXG5cclxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggMysuXHJcbiAqL1xyXG5cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDYvNy84LzkuXHJcbiAqIDIuIEltcHJvdmUgcmVhZGFiaWxpdHkgYW5kIGFsaWdubWVudCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxudGV4dGFyZWEge1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87IC8qIDEgKi9cclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cclxuICovXHJcblxyXG50YWJsZSB7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XHJcbn1cclxuXHJcbmh0bWwsXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gICAgY29sb3I6ICMyMjI7XHJcbn1cclxuXHJcblxyXG46Oi1tb3otc2VsZWN0aW9uIHtcclxuICAgIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XHJcbiAgICB0ZXh0LXNoYWRvdzogbm9uZTtcclxufVxyXG5cclxuOjpzZWxlY3Rpb24ge1xyXG4gICAgYmFja2dyb3VuZDogI2IzZDRmYztcclxuICAgIHRleHQtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG5pbWcge1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuZmllbGRzZXQge1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gICAgcmVzaXplOiB2ZXJ0aWNhbDtcclxufVxyXG5cclxuYntcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4uY2hyb21lZnJhbWUge1xyXG4gICAgbWFyZ2luOiAwLjJlbSAwO1xyXG4gICAgYmFja2dyb3VuZDogI2NjYztcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgcGFkZGluZzogMC4yZW0gMDtcclxufSIsIjpyb290IHtcclxuXHQvLyBDb2xvcnNcclxuXHQtLWRhcmstYmx1ZTogIzIxMjEyZDtcclxuXHQtLXJvc2UtcXVhcnR6OiAjZjZlZGY0O1xyXG5cdC0tcmFzcGJlcnJ5OiAjYmY0MmM2O1xyXG5cdC0tcmFzcGJlcnJ5LTQwcDogcmdiYSgxOTEsIDY2LCAxOTgsIDAuNCk7XHJcblx0LS13aGl0ZTogI2ZmZjtcclxuXHQtLWRhcmstZ3JleTogIzhmOGZhMDtcclxuXHQtLWxpZ2h0LWdyZXk6ICNjN2M3Y2Y7XHJcblx0LS1wdXJwbGU6ICMyYjFlNGM7XHJcblxyXG5cdC8vIEdyYWRpZW50c1xyXG5cdC0tZ3JhZGllbnQtMTogbGluZWFyLWdyYWRpZW50KFxyXG5cdFx0MTM1ZGVnLFxyXG5cdFx0I2ViNDBhNiAwJSxcclxuXHRcdCNmZjZhNjggMzQuNDMlLFxyXG5cdFx0I2YzODA0ZSA2My4wOCUsXHJcblx0XHQjZjNhODU0IDEwMCVcclxuXHQpO1xyXG5cdC0tZ3JhZGllbnQtMS03MHA6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdDkzLjQ3ZGVnLFxyXG5cdFx0I2Y1NzJhNCAyLjg2JSxcclxuXHRcdCNmZDhhODMgMzUuOSUsXHJcblx0XHQjZjU5YzcyIDYzLjQxJSxcclxuXHRcdCNmNmJhNzcgOTIuMDglXHJcblx0KTtcclxuXHQtLWdyYWRpZW50LTEtMzBwOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHQ5My40N2RlZyxcclxuXHRcdHJnYmEoMjQ1LCAxMTQsIDE2NCwgMC44KSAyLjg2JSxcclxuXHRcdCNmNzhlYjYgMi44NyUsXHJcblx0XHQjZmNhNDk4IDM1LjklLFxyXG5cdFx0I2Y3YmI4ZiA2My40MSUsXHJcblx0XHQjZjljOTkzIDkyLjA4JVxyXG5cdCk7XHJcblx0LS1ncmFkaWVudC0yOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHQxODBkZWcsXHJcblx0XHQjZGI0YWViIDAlLFxyXG5cdFx0I2FlNDFlOSA1MC41OCUsXHJcblx0XHQjOGEzOWU2IDEwMCVcclxuXHQpO1xyXG5cdC0tZGFyay1ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzQ3MmM3NyAwJSwgIzI2MWM0NSAxMDAlKTtcclxuXHJcblx0Ly8gRm9udFxyXG5cdC0tZm9udC1jb2xvcjogdmFyKC0tZGFyay1ibHVlKTtcclxuXHQtLW1haW4tZm9udDogbm9ybWFsIDE0cHggR2VvbWV0cmlhO1xyXG5cdC0tY2FwdGlvbjogYm9sZCA0OHB4LzYwcHggR2VvbWV0cmlhO1xyXG59XHJcblxyXG4vLy0tLS0tLS0tREVWSUNFIFNJWkUtLS0tLS0tLVxyXG4kc21hbGwtbW9iaWxlOiA0MDBweDtcclxuJHRhYmxldC13aWR0aDogNjQ4cHg7XHJcbiRkZXNrdG9wLXdpZHRoOiAxMDIzcHg7XHJcbiRjb250YWluZXItd2lkdGg6IDEyMzBweDtcclxuXHJcbkBtaXhpbiBzbWFsbC1tb2JpbGUge1xyXG5cdEBtZWRpYSAobWF4LXdpZHRoOiAkc21hbGwtbW9iaWxlKSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbkBtaXhpbiBtb2JpbGUge1xyXG5cdEBtZWRpYSAobWF4LXdpZHRoOiAjeyR0YWJsZXQtd2lkdGggLSAxcHh9KSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbkBtaXhpbiB0YWJsZXQge1xyXG5cdEBtZWRpYSAobWF4LXdpZHRoOiAjeyRkZXNrdG9wLXdpZHRofSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gZGVza3RvcCB7XHJcblx0QG1lZGlhIChtaW4td2lkdGg6ICN7JGRlc2t0b3Atd2lkdGggKyAxcHh9KSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbkBtaXhpbiBjb250YWluZXIge1xyXG5cdEBtZWRpYSAobWluLXdpZHRoOiAjeyRkZXNrdG9wLXdpZHRofSkgYW5kIChtYXgtd2lkdGg6ICN7JGNvbnRhaW5lci13aWR0aH0pIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG4iLCJodG1sIHtcclxuXHRmb250LXNpemU6IDE1cHg7XHJcblxyXG5cdEBpbmNsdWRlIGNvbnRhaW5lciB7XHJcblx0XHRmb250LXNpemU6IDE0cHg7XHJcblx0fVxyXG59XHJcblxyXG5ib2R5IHtcclxuXHRmb250OiB2YXIoLS1tYWluLWZvbnQpO1xyXG5cclxuXHRvdmVyZmxvdy14OiBoaWRkZW47XHJcblxyXG5cdG1heC13aWR0aDogMTAwdnc7XHJcblxyXG5cdGNvbG9yOiB2YXIoLS1mb250LWNvbG9yKTtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblxyXG5cdG1heC13aWR0aDogMTExMHB4O1xyXG5cdG1hcmdpbjogYXV0bztcclxuXHJcblx0QGluY2x1ZGUgY29udGFpbmVyIHtcclxuXHRcdHBhZGRpbmc6IDAgNjBweDtcclxuXHR9XHJcblxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRwYWRkaW5nOiAwIDMwcHg7XHJcblx0fVxyXG5cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0cGFkZGluZzogMCAyMHB4O1xyXG5cdH1cclxufVxyXG5cclxuLmgyIHtcclxuXHRmb250OiB2YXIoLS1jYXB0aW9uKTtcclxuXHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiIsIi5sb2dvIHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0Y29sb3I6IHZhcigtLXJvc2UtcXVhcnR6KTtcclxuXHJcblx0aW1nIHtcclxuXHRcdG1hcmdpbi1yaWdodDogMTNweDtcclxuXHR9XHJcblxyXG5cdCZfX2xhYmVsIHtcclxuXHRcdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0XHRmb250LXNpemU6IDM2cHg7XHJcblx0XHRsaW5lLWhlaWdodDogNDVweDtcclxuXHR9XHJcbn1cclxuIiwiLm1lbnUge1xyXG5cdGNvbG9yOiB2YXIoLS1yb3NlLXF1YXJ0eik7XHJcblx0Jl9fbGlzdCB7XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdH1cclxuXHQmX19pdGVtIHtcclxuXHRcdGZvbnQtc2l6ZTogMjRweDtcclxuXHRcdGZvbnQtd2VpZ2h0OiAzMDA7XHJcblx0XHRsaW5lLWhlaWdodDogMzBweDtcclxuXHJcblx0XHRtYXJnaW4tcmlnaHQ6IDYwcHg7XHJcblx0XHQmLmFjdGl2ZSB7XHJcblx0XHRcdGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cdFx0fVxyXG5cdFx0YSB7XHJcblx0XHRcdHRyYW5zaXRpb246IGFsbCAwLjM1cyBlYXNlLWluLW91dDtcclxuXHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cclxuXHRcdFx0Y29sb3I6IGluaGVyaXQ7XHJcblx0XHR9XHJcblx0fVxyXG5cdCZfX2xpbmUge1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cclxuXHRcdGhlaWdodDogNHB4O1xyXG5cclxuXHRcdHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dDtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNjBweCk7XHJcblxyXG5cdFx0Ym9yZGVyLXJhZGl1czogMjBweDtcclxuXHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdFx0MjcyLjQ4ZGVnLFxyXG5cdFx0XHQjZjNhODU0IDAlLFxyXG5cdFx0XHQjZjM4MDRlIDQzLjEzJSxcclxuXHRcdFx0cmdiYSgyNTUsIDEwNiwgMTA0LCAwLjk1KSA2OS41MyUsXHJcblx0XHRcdCNlYjQwYTYgOTguOCVcclxuXHRcdCk7XHJcblx0fVxyXG59XHJcbiIsIi5idG4ge1xyXG5cdGZvbnQtc2l6ZTogMzZweDtcclxuXHRmb250LXdlaWdodDogNTAwO1xyXG5cdGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG5cclxuXHRwYWRkaW5nOiAxN3B4IDQzcHg7XHJcblxyXG5cdHRyYW5zaXRpb246IGFsbCBjdWJpYy1iZXppZXIoMC4zOSwgMC41OCwgMC41NywgMSkgMC4ycztcclxuXHRsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xyXG5cclxuXHRjb2xvcjogdmFyKC0td2hpdGUpO1xyXG5cdGJvcmRlcjogMDtcclxuXHRib3JkZXItcmFkaXVzOiAzMHB4O1xyXG5cdGJhY2tncm91bmQ6IHZhcigtLWdyYWRpZW50LTEtNzBwKTtcclxuXHQmOmhvdmVyIHtcclxuXHRcdGJveC1zaGFkb3c6IDRweCA0cHggMTZweCAjNDcyYzc3LCAtNHB4IC00cHggMTZweCAjNDcyYzc3O1xyXG5cdH1cclxufVxyXG4iLCIuZ28tdG8ge1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuXHRtYXgtd2lkdGg6IDU4cHg7XHJcblx0aGVpZ2h0OiA1OHB4O1xyXG5cdHBhZGRpbmc6IDEzcHg7XHJcblxyXG5cdHRyYW5zaXRpb246IGFsbCBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpIDAuMjVzO1xyXG5cclxuXHRjb2xvcjogdmFyKC0td2hpdGUpO1xyXG5cdGJvcmRlcjogbm9uZTtcclxuXHRib3JkZXItcmFkaXVzOiA1MHB4O1xyXG5cdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdDkzLjQ3ZGVnLFxyXG5cdFx0I2Y1NzJhNCAyLjg2JSxcclxuXHRcdCNmZDhhODMgMzUuOSUsXHJcblx0XHQjZjU5YzcyIDYzLjQxJSxcclxuXHRcdCNmNmJhNzcgOTIuMDglXHJcblx0KTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cdGJveC1zaGFkb3c6IC00cHggLTRweCAxNnB4IHJnYmEoMzEsIDMyLCA2NSwgMC4xKSxcclxuXHRcdDRweCA0cHggMTZweCByZ2JhKDMxLCAzMiwgNjUsIDAuMSk7XHJcblx0JiAqIHtcclxuXHRcdHRyYW5zaXRpb246IGFsbCBlYXNlIDAuMnM7XHJcblx0fVxyXG5cdCY6aG92ZXIge1xyXG5cdFx0bWF4LXdpZHRoOiA5OTlweDtcclxuXHRcdHBhZGRpbmc6IDEzcHggMzRweDtcclxuXHRcdGltZyB7XHJcblx0XHRcdHJpZ2h0OiAzNHB4O1xyXG5cdFx0fVxyXG5cdH1cclxuXHQmOjphZnRlciB7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHJcblx0XHR3aWR0aDogMzJweDtcclxuXHRcdGhlaWdodDogMzJweDtcclxuXHJcblx0XHRjb250ZW50OiBcIlwiO1xyXG5cdH1cclxuXHRpbWcge1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0dG9wOiAxM3B4O1xyXG5cdFx0cmlnaHQ6IDEzcHg7XHJcblxyXG5cdFx0d2lkdGg6IDMycHg7XHJcblx0XHRoZWlnaHQ6IDMycHg7XHJcblx0fVxyXG5cdCZfX3R4dCB7XHJcblx0XHRmb250LXNpemU6IDE0cHg7XHJcblx0XHRmb250LXdlaWdodDogYm9sZDtcclxuXHRcdGxpbmUtaGVpZ2h0OiAxOHB4O1xyXG5cclxuXHRcdG1hcmdpbi1yaWdodDogNXB4O1xyXG5cclxuXHRcdG9wYWNpdHk6IDA7XHJcblx0fVxyXG59XHJcbiIsIi5jYXJkIHtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG5cdGNvbG9yOiB2YXIoLS1kYXJrLWdyZXkpO1xyXG5cdGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcblx0YmFja2dyb3VuZDogdmFyKC0td2hpdGUpO1xyXG5cdGJveC1zaGFkb3c6IDZweCA2cHggNzBweCByZ2JhKDMxLCAzMiwgNjUsIDAuMDYpLFxyXG5cdFx0LTZweCAtNnB4IDcwcHggcmdiYSgzMSwgMzIsIDY1LCAwLjA2KTtcclxuXHQmOmhvdmVyIHtcclxuXHRcdGNvbG9yOiB2YXIoLS1yb3NlLXF1YXJ0eik7XHJcblx0XHQmOmJlZm9yZSB7XHJcblx0XHRcdG9wYWNpdHk6IDE7XHJcblx0XHR9XHJcblx0XHQuY2FyZCB7XHJcblx0XHRcdCZfX3RpdGxlIHtcclxuXHRcdFx0XHRmb250LXdlaWdodDogYm9sZDtcclxuXHJcblx0XHRcdFx0Y29sb3I6IHZhcigtLXJvc2UtcXVhcnR6KTtcclxuXHRcdFx0fVxyXG5cdFx0XHQmX190ZWNoLWljb25zIGxpIHtcclxuXHRcdFx0XHRiYWNrZ3JvdW5kOiAjNGMzMTc3O1xyXG5cdFx0XHRcdGJveC1zaGFkb3c6IG5vbmU7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdCYgLmdvLXRvIHtcclxuXHRcdFx0bWF4LXdpZHRoOiA5OTlweDtcclxuXHRcdFx0cGFkZGluZzogMTNweCAzNHB4O1xyXG5cdFx0XHQmX190eHQge1xyXG5cdFx0XHRcdG9wYWNpdHk6IDE7XHJcblx0XHRcdH1cclxuXHRcdFx0aW1nIHtcclxuXHRcdFx0XHRyaWdodDogMzRweDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHQmOmJlZm9yZSB7XHJcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHR0b3A6IDA7XHJcblx0XHRsZWZ0OiAwO1xyXG5cclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0aGVpZ2h0OiAxMDAlO1xyXG5cclxuXHRcdGNvbnRlbnQ6IFwiXCI7XHJcblx0XHR0cmFuc2l0aW9uOiBlYXNlLWluIDAuMTVzO1xyXG5cclxuXHRcdG9wYWNpdHk6IDA7XHJcblx0XHRvcGFjaXR5OiAwO1xyXG5cdFx0Ym9yZGVyLXJhZGl1czogMzBweDtcclxuXHRcdGJhY2tncm91bmQ6IHZhcigtLWRhcmstZ3JhZGllbnQpO1xyXG5cdH1cclxuXHQmX193cmFwIHtcclxuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdHotaW5kZXg6IDE7XHJcblxyXG5cdFx0cGFkZGluZzogNDNweCAyNXB4IDYxcHg7XHJcblx0fVxyXG5cdCZfX3RpdGxlIHtcclxuXHRcdGZvbnQtc2l6ZTogMjRweDtcclxuXHRcdGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG5cclxuXHRcdG1pbi1oZWlnaHQ6IDYwcHg7XHJcblxyXG5cdFx0Y29sb3I6IHZhcigtLWZvbnQtY29sb3IpO1xyXG5cdH1cclxuXHQmX190ZWNoLW5hbWVzLFxyXG5cdCZfX3RlY2gtaWNvbnMge1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtd3JhcDogd3JhcDtcclxuXHR9XHJcblx0Jl9fdGVjaC1uYW1lcyB7XHJcblx0XHRmb250LXNpemU6IDE0cHg7XHJcblx0XHRmb250LXdlaWdodDogNTAwO1xyXG5cdFx0bGluZS1oZWlnaHQ6IDE4cHg7XHJcblxyXG5cdFx0bWFyZ2luLXRvcDogMTBweDtcclxuXHRcdGxpIHtcclxuXHRcdFx0bWFyZ2luLXJpZ2h0OiA1cHg7XHJcblx0XHRcdCY6OmFmdGVyIHtcclxuXHRcdFx0XHRjb250ZW50OiBcInxcIjtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHQmX190ZWNoLWljb25zIHtcclxuXHRcdG1hcmdpbi10b3A6IDMwcHg7XHJcblx0XHRsaSB7XHJcblx0XHRcdG1hcmdpbi1yaWdodDogMTBweDtcclxuXHRcdFx0cGFkZGluZzogOHB4O1xyXG5cclxuXHRcdFx0Ym9yZGVyLXJhZGl1czogNTAlO1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiAjZjNmM2Y4O1xyXG5cdFx0XHRib3gtc2hhZG93OiAtNHB4IC00cHggNTBweCByZ2JhKDIxOCwgMjI4LCAyNDgsIDAuMjUpLFxyXG5cdFx0XHRcdDRweCA0cHggNTBweCByZ2JhKDIxOCwgMjI4LCAyNDgsIDAuMjUpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHQmX19kZXNjIHtcclxuXHRcdGZvbnQtc2l6ZTogMTRweDtcclxuXHRcdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0XHRsaW5lLWhlaWdodDogMThweDtcclxuXHJcblx0XHRtYXJnaW4tdG9wOiAzMHB4O1xyXG5cdH1cclxuXHQmX19nby10byB7XHJcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRib3R0b206IDA7XHJcblx0XHRsZWZ0OiA1MCU7XHJcblxyXG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgNTAlKTtcclxuXHR9XHJcbn1cclxuIiwiLmhlYWRlciB7XHJcblx0cGFkZGluZy10b3A6IDM5cHg7XHJcblx0LmNvbnRhaW5lciB7XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHR9XHJcbn1cclxuIiwiLndlbGNvbWUge1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcblx0cGFkZGluZy1ib3R0b206IDEyMHB4O1xyXG5cclxuXHRjb2xvcjogdmFyKC0td2hpdGUpO1xyXG5cdCZfX2JnIHtcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdHotaW5kZXg6IC0xO1xyXG5cdFx0Ym90dG9tOiAwO1xyXG5cdFx0bGVmdDogMDtcclxuXHJcblx0XHR3aWR0aDogYXV0bztcclxuXHRcdG1pbi13aWR0aDogMTAwJTtcclxuXHRcdG1pbi1oZWlnaHQ6IDEwMCU7XHJcblx0fVxyXG5cdCZfX2Nsb3VkIHtcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdHotaW5kZXg6IC0xO1xyXG5cdFx0Ym90dG9tOiAwO1xyXG5cdFx0bGVmdDogMDtcclxuXHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHR9XHJcblx0Jl9fdHh0IHtcclxuXHRcdG1hcmdpbi1yaWdodDogMjBweDtcclxuXHR9XHJcblx0Jl9fdGl0bGUge1xyXG5cdFx0Zm9udC1zaXplOiAzNnB4O1xyXG5cdFx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRcdGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG5cdH1cclxuXHQmX19kZXNjIHtcclxuXHRcdGZvbnQtc2l6ZTogMjRweDtcclxuXHRcdGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcblx0XHRsaW5lLWhlaWdodDogMzBweDtcclxuXHJcblx0XHRtYXJnaW4tdG9wOiAzMHB4O1xyXG5cdH1cclxuXHQmX193cmFwIHtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblxyXG5cdFx0bWFyZ2luLXRvcDogMTgycHg7XHJcblx0fVxyXG5cdCZfX2NhbGxiYWNrIHtcclxuXHRcdG1hcmdpbi10b3A6IDYwcHg7XHJcblx0fVxyXG59XHJcbiIsIi5zZXJ2aWNlcyB7XHJcblx0bWFyZ2luLXRvcDogMzBweDtcclxuXHQmX19saXN0IHtcclxuXHRcdGRpc3BsYXk6IGdyaWQ7XHJcblxyXG5cdFx0bWFyZ2luLXRvcDogNzBweDtcclxuXHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XHJcblx0XHRncmlkLWdhcDogNjNweCAzM3B4O1xyXG5cdH1cclxufVxyXG4iLCIuYWJvdXQtdXMge1xyXG5cdG1hcmdpbi10b3A6IDEwOHB4O1xyXG5cclxuXHRjb2xvcjogdmFyKC0td2hpdGUpO1xyXG5cdCZfX3doeSB7XHJcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR6LWluZGV4OiAxO1xyXG5cclxuXHRcdHdpZHRoOiAxMzYycHg7XHJcblx0XHRtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDYwcHgpO1xyXG5cdFx0bWFyZ2luOiBhdXRvO1xyXG5cdFx0cGFkZGluZzogNjBweCAwO1xyXG5cclxuXHRcdGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcblx0XHRiYWNrZ3JvdW5kOiB2YXIoLS1ncmFkaWVudC0xLTcwcCk7XHJcblx0fVxyXG5cdCZfX2RpZ2l0YWwtbGlzdCB7XHJcblx0XHRkaXNwbGF5OiBncmlkO1xyXG5cclxuXHRcdG1hcmdpbi10b3A6IDUycHg7XHJcblx0XHRncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xyXG5cdFx0Z3JpZC1nYXA6IDUwcHg7XHJcblx0fVxyXG5cdCZfX2RpZ2l0YWwtaXRlbSB7XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHR9XHJcblx0Jl9fZGlnaXRhbC10aXRsZSB7XHJcblx0XHRmb250LXNpemU6IDM2cHg7XHJcblx0XHRsaW5lLWhlaWdodDogNDVweDtcclxuXHJcblx0XHRsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xyXG5cclxuXHRcdEBpbmNsdWRlIGNvbnRhaW5lciB7XHJcblx0XHRcdGZvbnQtc2l6ZTogMzBweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcclxuXHRcdH1cclxuXHR9XHJcblx0Jl9fZGlnaXRhbC1udW1iZXIge1xyXG5cdFx0Zm9udC1zaXplOiA3MnB4O1xyXG5cdFx0Zm9udC13ZWlnaHQ6IGJvbGQ7XHJcblx0XHRsaW5lLWhlaWdodDogOTFweDtcclxuXHJcblx0XHRtYXJnaW4tdG9wOiAyMnB4O1xyXG5cclxuXHRcdGxldHRlci1zcGFjaW5nOiAwLjAxZW07XHJcblx0fVxyXG5cdCZfX2hvdyB7XHJcblx0XHRtYXJnaW4tdG9wOiAtMTgwcHg7XHJcblx0XHRwYWRkaW5nLXRvcDogMjUwcHg7XHJcblxyXG5cdFx0YmFja2dyb3VuZDogdmFyKC0tZGFyay1ncmFkaWVudCk7XHJcblx0fVxyXG59XHJcbiJdfQ== */
